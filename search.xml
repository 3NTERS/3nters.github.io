<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2022寒假记录</title>
      <link href="/2022/12/29/%E5%AF%92%E5%81%87%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/12/29/%E5%AF%92%E5%81%87%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="假期开始"><a href="#假期开始" class="headerlink" title="假期开始"></a>假期开始</h1><p>2022.12.12，我与大佬还在教室讨论对偶性原理会怎么出题班级群就炸开了锅，手机一直在口袋振个不停，打开一看是说人外学院今天提前放假，但是我们机电学院还没有消息出来，有的同学发了问老师明天的考试还考不考的截图，图中老师斩钉截铁地说“考！”。不愧是咱🐓大，放假学院都是分开的。学霸看着消息都摇了摇头，表示明天就考试就算愿意放我们走也不是今天。我想也是，随后抓了张草稿纸继续算我的能观性分解题。然而没过几分钟学校就拟出通知各个学院放学生回家，我直接欣喜若狂，瞪大眼睛已经无法证明我的快乐，我还鼓起了腮帮子。学霸示意我坐下，虽然刚人外出消息的时候教室就走得只剩几个人，但还是要保持安静。她还是表示不太可能今天放，复习要紧。然后我就收到室友发给我的校放假通知，你说巧不巧？明天我考的那门课我没选。于是我光速收好书包和学霸告别，她对我表示羡慕的同时还对我收书的速度感到惊叹。</p><p>确实，通知时下午五点出的，人是八点到家的。大家还在高兴提前放假，我已经坐在沙发上喝可乐了。<br>假期，开始了。</p><h1 id="感染新冠"><a href="#感染新冠" class="headerlink" title="感染新冠"></a>感染新冠</h1><p>虽说放假了，但学习还是不能落下。之后的几天我拼命学习大镖客2的攻略，高强度过剧情和收集，从每天早上七点到晚上十一点。终于，两天后我不想再打开这个游戏了（😀），打开steam的第一眼看到它便头晕发旋。我想与它也是无缘了。好巧不巧，当天核酸做出来是阳性……床上躺了两天，这期间还做了好多很奇怪的梦，我想发烧是把我脑子里的奇怪幻想变成了画面，什么丝线组成的面包和水，还有无法兑换的厚棉被与河流……总之很奇怪就是了。家里的大葱根煎水味道很冲但是效果也很好，然而依旧吃什么都没胃口、头疼头晕、不想下床。38℃低烧两天，第三天37.7℃还算正常可以下床走路，中午的粥勉强下肚（无佐菜）。悲桑。</p><h1 id="还活着"><a href="#还活着" class="headerlink" title="还活着"></a>还活着</h1><p>很久没有更新网站了，两年过去发生了很多变化。我考上了本校的研究生，身边的人也奔走向各自的生活。故事有很多，不知道从哪里开始。研究生道路上的困难还等待着我（<del>虽然还没入学报道</del>），目前正在学习中枢模式发生器（CPG）控制，我也将会把学习过程与经验发在站上用来温故知新。3nters！重启！！<img src="https://raw.githubusercontent.com/3NTERS/Blog_img/main/images/人物.jpg?token=AXNYNKOCTHHLJKM5XBNCMS3GSTL3Q" alt="人物"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
          <category> 瞎说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论如何应对疲惫期</title>
      <link href="/2022/11/13/%E9%98%B6%E6%AE%B5%E6%80%A7%E7%96%B2%E6%83%AB%E4%B8%8E%E5%A4%96%E5%87%BA%E7%9A%84%E5%BF%85%E8%A6%81%E6%80%A7%E8%81%94%E7%B3%BB/"/>
      <url>/2022/11/13/%E9%98%B6%E6%AE%B5%E6%80%A7%E7%96%B2%E6%83%AB%E4%B8%8E%E5%A4%96%E5%87%BA%E7%9A%84%E5%BF%85%E8%A6%81%E6%80%A7%E8%81%94%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="论如何应对疲惫期"><a href="#论如何应对疲惫期" class="headerlink" title="论如何应对疲惫期"></a>论如何应对疲惫期</h1><blockquote><p>经验帖，讲述自身处于疲惫低落中时如何释放压力恢复精力</p></blockquote><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>发现自己最近间歇性地有疲惫期，或是一两周或是两三天，我猜想和学习和工作有关。十一月的这几周是考试周，同时工作上的项目也快到ddl。每当疲惫期到来时，我便会变得没有内驱力、对学习没有欲望、拒绝沟通，什么费力的事情都不想做，哪怕坐着刷视频也不知道看的是什么。状态很恍惚。</p><h1 id="尝试过的方法"><a href="#尝试过的方法" class="headerlink" title="尝试过的方法"></a>尝试过的方法</h1><ul><li><p><strong>顺其自然</strong><br>怎么舒服怎么来，坐着趴着看手机什么都不做，别人找我自然也没有回复。然而疲惫的情况并没有好转，只是觉得自由了些，当然学习动力还是欠缺。</p></li><li><p><strong>散步锻炼</strong><br>直接就是一个门的出，寒风中短袖加卫衣从🐔大绕了一大圈到理工但是疲惫与无力并没有消减，反而希望就这么一直溜达下去，我一想，那这不就和上面情况一样了吗？！于是乎想要找国达出来但突然想到他好像还在复习，便自己继续走了下去。</p></li><li><p><strong>倾诉沟通</strong><br>我往弗雷德的方向走去，看到浙传我想到了东东。我立马打开手机，果然，那个靠谱的男人总是如此靠谱。我们约在了幸福里烧烤店，畅谈近期生活与倾吐心中不快，就像高中一样。许久不见，刚见面竟有些放不开，但是熟悉的面孔又唤起了脑中的记忆，曾经吐槽过的事谈过的心……现在又从过去聊到现在再到未来……真的很久没有如此畅快过了。经典的饭后压马路环节，靠谱的男人将我送到校门口后便告别辽。</p></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>  上面的三种方法是按照顺序执行，没有将每种方法都独立出来验证。所以就结果看，倾诉沟通的方法是最有效的，我想朋友所能给的不只是简单的话语，还有精神和行动上的支持鼓励，thanks bro，没有你我可能还在沼泽里挣扎。这也让我想到压力不是突然到来的，或许我应该早些注意到自己的情绪变化并做出调整，在疲惫的早期，锻炼和休息对于缓解焦虑是有效的。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
          <category> 瞎说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 精力回复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于STC52的多通道信号切换装置</title>
      <link href="/2022/11/07/%E5%9F%BA%E4%BA%8ESTC52%E7%9A%84%E5%A4%9A%E9%80%9A%E9%81%93%E4%BF%A1%E5%8F%B7%E5%88%87%E6%8D%A2/"/>
      <url>/2022/11/07/%E5%9F%BA%E4%BA%8ESTC52%E7%9A%84%E5%A4%9A%E9%80%9A%E9%81%93%E4%BF%A1%E5%8F%B7%E5%88%87%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有好一段时间没有更新博客了，还有前面的一些坑也没填…（虽然没人看😶‍🌫️）<br>解释一下就是最近考试和实习的任务有点多，今天要写的就是其中的一个项目，没什么技术含量但一些细节和流程值得以后做项目参考。</p><h1 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h1><blockquote><p>大概是不同频率电刺激小老鼠之类（?）</p></blockquote><h1 id="项目要求"><a href="#项目要求" class="headerlink" title="项目要求"></a>项目要求</h1><p>如下<br><img src="https://c2.im5i.com/2022/11/07/X3eYQ.png" alt="X3eYQ.png"><br><img src="https://c2.im5i.com/2022/11/07/X3zp3.png" alt="X3zp3.png"></p><h1 id="分析需求"><a href="#分析需求" class="headerlink" title="分析需求"></a>分析需求</h1><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ul><li><p>双路信号切换</p><blockquote><p>双路继电器、<code>stc52</code>芯片</p></blockquote></li><li><p>网口输出</p><blockquote><p><code>RJ45</code>网口</p></blockquote></li><li><p><code>5V</code>供电</p><blockquote><p><code>micro-B</code>或电池</p></blockquote></li><li><p>继电器驱动</p><blockquote><p><code>NPN</code>三极管 </p></blockquote></li><li><p>调试显示</p><blockquote><p><code>OLED</code></p></blockquote></li></ul><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul><li>三组三模式切换<blockquote><p>双标志判断<br>定时中断</p></blockquote></li></ul><h1 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h1><p><img src="https://c2.im5i.com/2022/11/07/X3ajO.png" alt="X3ajO.png"></p><h1 id="AD预览图"><a href="#AD预览图" class="headerlink" title="AD预览图"></a>AD预览图</h1><p><img src="https://c2.im5i.com/2022/11/07/X34eR.png" alt="X34eR.png"></p><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><details class="toggle" ><summary class="toggle-button" style="">点击以查看代码</summary><div class="toggle-content"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> u16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">char</span> u8;</span><br><span class="line">sbit MODE_1=P3^<span class="number">0</span>;</span><br><span class="line">sbit MODE_2=P3^<span class="number">1</span>;</span><br><span class="line">sbit MODE_3=P3^<span class="number">2</span>;</span><br><span class="line">sbit MODE_4=P3^<span class="number">3</span>;</span><br><span class="line">sbit OUT_1=P1^<span class="number">1</span>;</span><br><span class="line">sbit OUT_2=P1^<span class="number">2</span>;</span><br><span class="line">sbit OUT_3=P1^<span class="number">3</span>;</span><br><span class="line">sbit OUT_4=P1^<span class="number">4</span>;</span><br><span class="line">sbit beep=P2^<span class="number">3</span>;</span><br><span class="line">u16 flag= <span class="number">-1</span>;</span><br><span class="line">u16 t_flag=<span class="number">-1</span>;</span><br><span class="line">u16 k=<span class="number">0</span>;<span class="comment">//默认100s</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//11.0592MHZ延时，n=1为1ms</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">(u16 n)</span>&#123;</span><br><span class="line">u16 i,y;</span><br><span class="line"><span class="keyword">for</span>(i=n;i&gt;<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">for</span>(y=<span class="number">114</span>;y&gt;<span class="number">0</span>;y--);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0Init</span><span class="params">()</span>&#123;</span><br><span class="line">TMOD|=<span class="number">0X01</span>;<span class="comment">//选择为定时器 0 模式， 工作方式 1， 仅用 TR0 打开启动。</span></span><br><span class="line">TH0=<span class="number">0XFC</span>; <span class="comment">//给定时器赋初值， 定时 1ms</span></span><br><span class="line">TL0=<span class="number">0X18</span>;</span><br><span class="line">ET0=<span class="number">1</span>;<span class="comment">//打开定时器 0 中断允许</span></span><br><span class="line">EA=<span class="number">1</span>;<span class="comment">//打开总中断</span></span><br><span class="line">TR0=<span class="number">1</span>;<span class="comment">//打开定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">Timer0Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">delay(<span class="number">100</span>);<span class="comment">//延时消抖</span></span><br><span class="line"><span class="keyword">if</span>(MODE_4==<span class="number">1</span>)&#123;</span><br><span class="line">delay(<span class="number">100</span>);<span class="comment">//延时消抖</span></span><br><span class="line"><span class="keyword">if</span>(MODE_1==<span class="number">0</span>)</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(MODE_2==<span class="number">0</span>)</span><br><span class="line">flag=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(MODE_3==<span class="number">0</span>)</span><br><span class="line">flag=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(MODE_4==<span class="number">0</span>)&#123;</span><br><span class="line">delay(<span class="number">100</span>);<span class="comment">//延时消抖</span></span><br><span class="line"><span class="keyword">if</span>(MODE_1==<span class="number">0</span>)</span><br><span class="line">t_flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(MODE_2==<span class="number">0</span>)</span><br><span class="line">t_flag=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(MODE_3==<span class="number">0</span>)</span><br><span class="line">t_flag=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定时中断0中断函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0</span><span class="params">()</span> interrupt 1&#123;</span><br><span class="line">u16 count;</span><br><span class="line">TH0=<span class="number">0XFC</span>; <span class="comment">//给定时器赋初值， 定时 1ms</span></span><br><span class="line">TL0=<span class="number">0X18</span>;</span><br><span class="line">count++;</span><br><span class="line"><span class="comment">//if(count&gt;=100)&#123;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(t_flag==<span class="number">1</span>)&#123;</span><br><span class="line">k=<span class="number">500</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t_flag==<span class="number">2</span>)&#123;</span><br><span class="line">k=<span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t_flag==<span class="number">3</span>)&#123;</span><br><span class="line">k=<span class="number">1500</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">1</span>)&#123;</span><br><span class="line">OUT_1=<span class="number">1</span>;</span><br><span class="line">delay(k);</span><br><span class="line">OUT_1=<span class="number">0</span>;</span><br><span class="line">OUT_2=<span class="number">1</span>;</span><br><span class="line">delay(k);</span><br><span class="line">OUT_2=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="number">2</span>)&#123;</span><br><span class="line">OUT_1=<span class="number">1</span>;</span><br><span class="line">delay(k);</span><br><span class="line">OUT_1=<span class="number">0</span>;</span><br><span class="line">OUT_2=<span class="number">1</span>;</span><br><span class="line">delay(k);</span><br><span class="line">OUT_2=<span class="number">0</span>;</span><br><span class="line">OUT_3=<span class="number">1</span>;</span><br><span class="line">delay(k);</span><br><span class="line">OUT_3=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="number">3</span>)&#123;</span><br><span class="line">OUT_1=<span class="number">1</span>;</span><br><span class="line">delay(k);</span><br><span class="line">OUT_1=<span class="number">0</span>;</span><br><span class="line">OUT_2=<span class="number">1</span>;</span><br><span class="line">delay(k);</span><br><span class="line">OUT_2=<span class="number">0</span>;</span><br><span class="line">OUT_3=<span class="number">1</span>;</span><br><span class="line">delay(k);</span><br><span class="line">OUT_3=<span class="number">0</span>;</span><br><span class="line">OUT_4=<span class="number">1</span>;</span><br><span class="line">delay(k);</span><br><span class="line">OUT_4=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//OUT_1=0;</span></span><br><span class="line"><span class="comment">//OUT_2=0;</span></span><br><span class="line"><span class="comment">//OUT_3=0;</span></span><br><span class="line"><span class="comment">//OUT_4=0;</span></span><br><span class="line">OUT_1=<span class="number">0</span>;</span><br><span class="line">OUT_2=<span class="number">0</span>;</span><br><span class="line">OUT_3=<span class="number">0</span>;</span><br><span class="line">OUT_4=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//beep=~beep;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></details><h1 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h1><h2 id="原理图设计"><a href="#原理图设计" class="headerlink" title="原理图设计"></a>原理图设计</h2><p>修改历史</p><ul><li><p>去掉按键处的上拉电阻和电压，直接<code>IO</code>口</p><blockquote><p>调试时一按开关电压全拉低，单片机不供电。</p></blockquote></li><li><p>加入<code>OLED</code>方便调试，船型开关改拨动开关</p><blockquote><p>调试的时候才发现没有指示,真有够蠢的。硕大的船型开关和<code>7x9</code>的电路板格格不入…</p></blockquote></li><li><p><code>PNP</code>三极管改<code>NPN</code>三极管</p><blockquote><p>设计的是单片机供电输出高电平驱动继电器,集电极为继电器低，发射极为地，基极为<code>IO</code>口，b&gt;e时ce导通。然而，使用<code>PNP</code>的结果是b&gt;e时be导通。</p></blockquote><p>  ⚠️⚠️封装和引脚映射一定要好好检查！！！被这个坑了好多次，要看技术手册上实际的引脚对应的极（不然就会出现需要三极管正反倒焊的骚操作）。</p></li><li><p>修改<code>RJ45</code>封装</p></li></ul><h2 id="元器件选型"><a href="#元器件选型" class="headerlink" title="元器件选型"></a>元器件选型</h2><p>原则：<br>所选的元器件要是被广泛使用验证过的，尽量少使用冷 门、偏门芯片，减少开发风险。</p><ul><li><p>继电器</p><blockquote><p>国产<code>HFD/5</code>信号继电器，一开始买成24V，白花一百多块钱！！(╯▔皿▔)╯</p></blockquote></li><li><p>三极管</p><blockquote><p><code>SOT23</code>封装<code>S8015</code></p></blockquote></li><li><p>网口</p><blockquote><p><code>RJ45</code>淘宝任意款（不带灯）</p></blockquote></li><li><p>按键</p><blockquote><p><code>6x6</code>贴片</p></blockquote></li></ul><h2 id="电路板设计"><a href="#电路板设计" class="headerlink" title="电路板设计"></a>电路板设计</h2><p>修改历史</p><ul><li><p>板子大小从10x10-&gt;7x9</p><blockquote><p>开始对高压电路的特性不太熟悉便尽可能的把元件分地很开，但师父说没必要就改小了。</p></blockquote></li><li><p>整体布局优化</p><blockquote><p>主要就是<code>MCU</code>的方向改变，让<code>IO</code>口尽量和输出对应，不用飞太远的线过去。</p></blockquote></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>绘制电路图的时候封装最好是自己画，用别人的也要和自己的元器件技术手册参数对照一下，免得犯和我一样的低级错误。</li><li>调试过程中出了很多设计时没想到的问题，用师父的话来说就是“大方向正确，小错误不断”。</li><li>很多错误都是粗心大意造成的，细节方面主要是技术手册还没看透，还有一些基本原理和常识没有，例如英制封装和公制封装的对应、51最小系统板原理图、三极管的运用等。</li><li>感谢师父和学长的耐心教导，瑞思拜。</li><li>项目完结后再补充终版。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 嵌入式项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL数据库安装失败总结</title>
      <link href="/2022/10/24/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E6%80%BB%E7%BB%93/"/>
      <url>/2022/10/24/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>信息技术课程要求学习使用<code>SQL</code>数据库的增删查改，我学习前端那必然是要多总结点啦！</p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><code>SQL</code>安装失败,报错信息为<code>等待数据库引擎恢复句柄失败</code>，搜索尝试过一些，最后在知乎大佬的回答下找到了我的解决办法。<br>我将把成功的方法、已知的和尝试过的方法都写出来。</p><h2 id="强制模拟扇区大小为4KB（成功方法）"><a href="#强制模拟扇区大小为4KB（成功方法）" class="headerlink" title="强制模拟扇区大小为4KB（成功方法）"></a>强制模拟扇区大小为4KB（成功方法）</h2><ul><li>以管理员身份打开PowerShell并输入:  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">New-ItemProperty -Path &quot;HKLM:\SYSTEM\CurrentControlSet\Services\stornvme\Parameters\Device&quot; -Name   &quot;ForcedPhysicalSectorSizeInBytes&quot; -PropertyType MultiString -Force -Value &quot;* 4095&quot;</span><br></pre></td></tr></table></figure></li><li>验证修改是否完成:  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-ItemProperty -Path &quot;HKLM:\SYSTEM\CurrentControlSet\Services\stornvme\Parameters\Device&quot; -Name   &quot;ForcedPhysicalSectorSizeInBytes&quot;</span><br></pre></td></tr></table></figure>  没有报错则表明修改成功，重启安装即可。</li></ul><h2 id="格式化硬盘，删除分区并重新指定扇区大小（已知的）"><a href="#格式化硬盘，删除分区并重新指定扇区大小（已知的）" class="headerlink" title="格式化硬盘，删除分区并重新指定扇区大小（已知的）"></a>格式化硬盘，删除分区并重新指定扇区大小（已知的）</h2><p>（待我百度一下如何重新指定扇区大小）</p><h2 id="完全删除SQL相关文件后重装（尝试但失败-）"><a href="#完全删除SQL相关文件后重装（尝试但失败-）" class="headerlink" title="完全删除SQL相关文件后重装（尝试但失败.）"></a>完全删除SQL相关文件后重装（尝试但失败.）</h2><ul><li>控制面板卸载所有<code>SQL</code>程序。</li><li>在<code>C:\Program Files</code>和<code>C:\Program Files(x86)</code>中找到<code>SQL</code>相关文件删除</li><li>检查自定义的安装路径的文件夹并删除。</li><li>重启后安装。</li></ul><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><h2 id="问题内容"><a href="#问题内容" class="headerlink" title="问题内容"></a>问题内容</h2><p><code>等待数据库引擎恢复句柄失败</code></p><h2 id="问题发生场景"><a href="#问题发生场景" class="headerlink" title="问题发生场景"></a>问题发生场景</h2><p>Windows 11或较新版本的Windows 10中，安装SQL Server 2019可能失败，出现”等待数据库引擎恢复句柄失败“的错误。通常是在尝试将其安装到NVME固态硬盘上时出现问题。</p><h2 id="问题发生原因"><a href="#问题发生原因" class="headerlink" title="问题发生原因"></a>问题发生原因</h2><p>一些较新的硬件设备磁盘扇区大小在4KB以上，而SQL Server仅支持只512字节和4096字节大小的扇区。<br>如果要检查自己的硬盘扇区大小是否符合要求，以检查D盘为例，以管理员身份打开PowerShell并输入：<br>fsutil fsinfo sectorinfo D:<br>在返回的信息中，PhysicalBytesPerSectorForAtomicity这个值即为扇区大小。</p>]]></content>
      
      
      <categories>
          
          <category> SQL </category>
          
          <category> 环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django入门（零）安装部署与问题总结</title>
      <link href="/2022/10/11/Django%E5%85%A5%E9%97%A8%EF%BC%88%E9%9B%B6%EF%BC%89%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E4%B8%8E%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
      <url>/2022/10/11/Django%E5%85%A5%E9%97%A8%EF%BC%88%E9%9B%B6%EF%BC%89%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E4%B8%8E%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Python安装"><a href="#Python安装" class="headerlink" title="Python安装"></a>Python安装</h1><h2 id="确认版本"><a href="#确认版本" class="headerlink" title="确认版本"></a>确认版本</h2><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><h1 id="Django安装"><a href="#Django安装" class="headerlink" title="Django安装"></a>Django安装</h1><h2 id="pip安装"><a href="#pip安装" class="headerlink" title="pip安装"></a>pip安装</h2><h2 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h2><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><h1 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h1><h2 id="命令行-1"><a href="#命令行-1" class="headerlink" title="命令行"></a>命令行</h2><h1 id="Vscode环境配置"><a href="#Vscode环境配置" class="headerlink" title="Vscode环境配置"></a>Vscode环境配置</h1><h2 id="选择解释器"><a href="#选择解释器" class="headerlink" title="选择解释器"></a>选择解释器</h2><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h1 id="总结（😶‍🌫️四小时煎熬）"><a href="#总结（😶‍🌫️四小时煎熬）" class="headerlink" title="总结（😶‍🌫️四小时煎熬）"></a>总结（😶‍🌫️四小时煎熬）</h1><h2 id="环境变量（🌟🌟🌟🌟）"><a href="#环境变量（🌟🌟🌟🌟）" class="headerlink" title="环境变量（🌟🌟🌟🌟）"></a>环境变量（🌟🌟🌟🌟）</h2>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
          <category> Django入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue入门笔记（四）类与样式绑定</title>
      <link href="/2022/10/04/Vue%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A/"/>
      <url>/2022/10/04/Vue%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%E7%B1%BB%E4%B8%8E%E6%A0%B7%E5%BC%8F%E7%BB%91%E5%AE%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="绑定HTML-class"><a href="#绑定HTML-class" class="headerlink" title="绑定HTML class"></a>绑定HTML class</h1><h2 id="绑定对象"><a href="#绑定对象" class="headerlink" title="绑定对象"></a>绑定对象</h2><p>可以给<code>:class(v-bind:简写)</code>传递一个对象来动态切换<code>class</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; active: isActive &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>表示<code>active</code> 是否存在取决于数据属性<code>isActive</code>的真假值</p><p>对象中可以存在多个字段来操作多个<code>class</code>，且可以和普通<code>class</code>共存<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">isActive</span>:<span class="literal">true</span>,</span><br><span class="line">        <span class="attr">hasError</span>:<span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;static&quot;</span>, </span></span><br><span class="line"><span class="tag">  <span class="attr">:class</span>=<span class="string">&quot;&#123; active: isActive, &#x27;text-danger&#x27;: hasError &#125;&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>渲染结果为<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;static active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>绑定对象不一定要是内联字面量，也可以直接绑定一个对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">classObject</span>: &#123;</span><br><span class="line">      <span class="attr">active</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">&#x27;text-danger&#x27;</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;classObject&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>当然此对象可以是计算方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">isActive</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">error</span>: <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  <span class="title function_">classObject</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">active</span>: <span class="variable language_">this</span>.<span class="property">isActive</span> &amp;&amp; !<span class="variable language_">this</span>.<span class="property">error</span>,</span><br><span class="line">      <span class="string">&#x27;text-danger&#x27;</span>: <span class="variable language_">this</span>.<span class="property">error</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">error</span>.<span class="property">type</span> === <span class="string">&#x27;fatal&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;classObject&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Vue入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue入门笔记（三）计算属性</title>
      <link href="/2022/09/26/Vue%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7/"/>
      <url>/2022/09/26/Vue%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>说白了所谓<code>计算方法</code>就是添加一个方法<br>如下例子，想要展示已出版书籍<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">author</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">        <span class="attr">books</span>: [</span><br><span class="line">          <span class="string">&#x27;Vue 2 - Advanced Guide&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;Vue 3 - Basic Guide&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;Vue 4 - The Mystery&#x27;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Has published books:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; author.books.length &gt; 0 ? &#x27;Yes&#x27; : &#x27;No&#x27; &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><br>但是因为耦合较高不好维护，所以将<code>HTML</code>内的表达式改成方法<br>改进如下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">author</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">        <span class="attr">books</span>: [</span><br><span class="line">          <span class="string">&#x27;Vue 2 - Advanced Guide&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;Vue 3 - Basic Guide&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;Vue 4 - The Mystery&#x27;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>: &#123;</span><br><span class="line">    <span class="comment">// 一个计算属性的 getter</span></span><br><span class="line">    <span class="title function_">publishedBooksMessage</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// `this` 指向当前组件实例</span></span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">author</span>.<span class="property">books</span>.<span class="property">length</span> &gt; <span class="number">0</span> ? <span class="string">&#x27;Yes&#x27;</span> : <span class="string">&#x27;No&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Has published books:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; publishedBooksMessage &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><br><code>HTML</code>显示内容为定义的计算方法名称<code>publishedBooksMessage</code>,方便后期维护</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Vue入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue入门笔记（二）模板语法</title>
      <link href="/2022/09/26/Vue%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/09/26/Vue%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h1><p>Vue使用基于<code>html</code>的模板语法，允许将<code>DOM</code>绑定到底层<code>Vue</code>实例的数据</p><h2 id="文本插值"><a href="#文本插值" class="headerlink" title="文本插值"></a>文本插值</h2><p>双大括号语法文本插值 (<code>Mustache</code>)</p><ul><li>插数据<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>message:&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 绑定v-once，一次性插值，不会再变化 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span>这个将不会改变：&#123;&#123;msg&#125;&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>插<code>HTML</code>代码<br>原始<code>HTML</code> 双括号会解释为普通文本而不是<code>HTML</code>代码，输出真正的<code>HTML</code>需要<code>v-html</code>指令 <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Using mustaches:&#123;&#123;rawHtml&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Using v-html idrective:<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">&quot;rawHtml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="HTML属性-Attribute-绑定"><a href="#HTML属性-Attribute-绑定" class="headerlink" title="HTML属性(Attribute)绑定"></a>HTML属性(Attribute)绑定</h2><p>  <code>Attribute mustache</code>语法不能作用在<code>HTML attribute</code>上，这时候要用<code>v-bind</code>指令动态绑定<code>id</code><br>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;dynamicId&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- dynamicId`为变量) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-bind:disabled</span>=<span class="string">&quot;isButtonDisabled&quot;</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li><code>js</code>表达式支持<br>使用<code>javaScript</code>表达式 对于所有数据的绑定<code>vue.js</code>都提供了完全的<code>js</code>表达式支持<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;number+1&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&#123;&#123;ok?&#x27;Yes&#x27;:&#x27;No&#x27;&#125;&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&#123;&#123;message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;)&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;&#x27;list-&#x27;+dynamicId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>但不支持js语句和条件控制 （也就是包含关键字的语句），如<code>var</code>、<code>if</code>、<code>return</code>等</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Vue入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue入门笔记（一）Vscode搭建Vue项目及项目结构说明</title>
      <link href="/2022/09/16/%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89Vscode%E6%90%AD%E5%BB%BAVue%E9%A1%B9%E7%9B%AE%E5%8F%8A%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E/"/>
      <url>/2022/09/16/%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89Vscode%E6%90%AD%E5%BB%BAVue%E9%A1%B9%E7%9B%AE%E5%8F%8A%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue的安装"><a href="#Vue的安装" class="headerlink" title="Vue的安装"></a>Vue的安装</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><ul><li>直接进到 <a href="https://nodejs.org/en/">node.js官方</a>下载，版本最好是<code>16</code>代以前,后面使用模板的时候不会因为新版加密协议更新而报错</li><li>打开<code>cmd</code>命令行输入<code>node -v</code>和<code>npm -v</code>查看版本，如果有出现对应的版本号则说明安装成功</li></ul><h2 id="配置cnpm镜像"><a href="#配置cnpm镜像" class="headerlink" title="配置cnpm镜像"></a>配置cnpm镜像</h2><p>有些是用淘宝的npm安装依赖包资源</p><ul><li>命令行输入<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li>没报错就表示成功（可能是之前用脚本的时候下过了我就跳过了这步）</li></ul><h2 id="安装Vue-cli脚手架构建工具"><a href="#安装Vue-cli脚手架构建工具" class="headerlink" title="安装Vue-cli脚手架构建工具"></a>安装Vue-cli脚手架构建工具</h2><ul><li>命令行输入(安装有点慢可能要等一会）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g vue-cli</span><br></pre></td></tr></table></figure></li></ul><h1 id="Vscode搭建Vue项目"><a href="#Vscode搭建Vue项目" class="headerlink" title="Vscode搭建Vue项目"></a>Vscode搭建Vue项目</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><ul><li>直接搜索相应的插件<code>Vue Language Features</code></li></ul><h2 id="用vue-cli脚手架构建工具构建项目"><a href="#用vue-cli脚手架构建工具构建项目" class="headerlink" title="用vue-cli脚手架构建工具构建项目"></a>用vue-cli脚手架构建工具构建项目</h2><ul><li><code>Vscode</code>中创建<code>cmd</code>命令行窗口<br><img src="https://c2.im5i.com/2022/09/17/HGsJt.png" alt=""></li><li>升级<code>vue-cli</code>版本，在命令行中输入<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br><span class="line">npm install -g @vue/cli-init</span><br></pre></td></tr></table></figure></li><li>在准备创建项目的文件夹输入命令<code>vue init webpack demo001</code>或者<code>vue creat demo001</code>(demo001是项目名称)，然后按提示操作<br><img src="https://c2.im5i.com/2022/09/17/HGUMm.png" alt=""><br>最后一步问<br><code>Should we run `npm install` for you after the project has been created? (recommended)</code><br>千万别直接回车！！选第三个然后自己按提示步骤操作，否则你要陷入<del>无边无际地</del>等待</li><li>安装完毕后运行<code>npm run dev</code>就会自动打开浏览器转到访问地址<code>http://localhost:8080</code><br><img src="https://c2.im5i.com/2022/09/17/HGtds.png" alt="HGtds.png"></li></ul><h1 id="Vue项目结构说明"><a href="#Vue项目结构说明" class="headerlink" title="Vue项目结构说明"></a>Vue项目结构说明</h1><p><a href="http://t.csdn.cn/Ylk3i">转自博主</a><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">├──</span> <span class="string">build</span> <span class="string">---------------------------------</span> <span class="string">项目构建(webpack)相关配置文件，配置参数什么的，一般不用动</span> </span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">build.js</span> <span class="string">--------------------------webpack打包配置文件</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">check-versions.js</span> <span class="string">------------------------------</span> <span class="string">检查npm,nodejs版本</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">dev-client.js</span> <span class="string">----------------------------------</span> <span class="string">设置环境</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">dev-server.js</span> <span class="string">----------------------------------</span> <span class="string">创建express服务器，配置中间件，启动可热重载的服务器，用于开发项目</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">utils.js</span> <span class="string">---------------------------------------</span> <span class="string">配置资源路径，配置css加载器</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">vue-loader.conf.js</span> <span class="string">-----------------------------</span> <span class="string">配置css加载器等</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">webpack.base.conf.js</span> <span class="string">---------------------------</span> <span class="string">webpack基本配置</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">webpack.dev.conf.js</span> <span class="string">----------------------------</span> <span class="string">用于开发的webpack设置</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">webpack.prod.conf.js</span> <span class="string">---------------------------</span> <span class="string">用于打包的webpack设置</span></span><br><span class="line"><span class="string">├──</span> <span class="string">config</span> <span class="string">----------------------------------</span> <span class="string">配置目录，包括端口号等。我们初学可以使用默认的。</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">dev.env.js</span> <span class="string">--------------------------</span> <span class="string">开发环境变量</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">index.js</span> <span class="string">----------------------------</span> <span class="string">项目配置文件</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">prod.env.js</span> <span class="string">-------------------------</span> <span class="string">生产环境变量</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">test.env.js</span> <span class="string">-------------------------</span> <span class="string">测试环境变量</span></span><br><span class="line"><span class="string">├──</span> <span class="string">node_modules</span> <span class="string">----------------------------</span> <span class="string">npm</span> <span class="string">加载的项目依赖模块</span></span><br><span class="line"><span class="string">├──</span> <span class="string">src</span> <span class="string">-------------------------------------</span> <span class="string">我们要开发的目录，基本上要做的事情都在这个目录里。</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">assets</span> <span class="string">------------------------------</span> <span class="string">静态文件，放置一些图片，如logo等</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">components</span> <span class="string">--------------------------</span> <span class="string">组件目录，存放组件文件，可以不用。</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">main.js</span> <span class="string">-----------------------------</span> <span class="string">主js</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">App.vue</span> <span class="string">-----------------------------</span> <span class="string">项目入口组件，我们也可以直接将组件写这里，而不使用</span> <span class="string">components</span> <span class="string">目录。</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">router</span> <span class="string">------------------------------</span> <span class="string">路由</span></span><br><span class="line"><span class="string">├──</span> <span class="string">static</span> <span class="string">----------------------------</span> <span class="string">静态资源目录，如图片、字体等。</span></span><br><span class="line"><span class="string">├──</span> <span class="string">index.html</span> <span class="string">------------------------------</span> <span class="string">首页入口文件，你可以添加一些</span> <span class="string">meta</span> <span class="string">信息或统计代码啥的。</span></span><br><span class="line"><span class="string">├──</span> <span class="string">package.json</span> <span class="string">----------------------------</span> <span class="string">node配置文件，记载着一些命令和依赖还有简要的项目描述信息</span> </span><br><span class="line"><span class="string">├──</span>  <span class="string">.README.md-------------------------------</span> <span class="string">项目的说明文档，markdown</span> <span class="string">格式。想怎么写怎么写，不会写就参照github上star多的项目，看人家怎么写的</span></span><br><span class="line"><span class="string">├──</span> <span class="string">.xxxx文件：这些是一些配置文件，包括语法配置，git配置等</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">.babelrc---------------------------------</span> <span class="string">babel配置文件</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span>  <span class="string">.editorconfig----------------------------</span> <span class="string">编辑器配置</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span>  <span class="string">.eslintignore-------------------------------</span> <span class="string">配置需要或略的路径，一般build、config、dist、test等目录都会配置忽略</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span>  <span class="string">.eslintrc.js</span> <span class="string">-------------------------------</span> <span class="string">配置代码格式风格检查规则</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span>  <span class="string">.gitignore-------------------------------</span> <span class="string">配置git可忽略的文件</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span>  <span class="string">.postcssrc.js</span> <span class="string">-------------------------------</span> <span class="string">css转换工具</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Vue入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于cd指令</title>
      <link href="/2022/09/16/%E5%85%B3%E4%BA%8Ecd%E6%8C%87%E4%BB%A4/"/>
      <url>/2022/09/16/%E5%85%B3%E4%BA%8Ecd%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>起因是安装<code>Vue</code>时要用到<code>cd</code>指令然而我早就忘了…现在记录在博客，以后再忘记就看看</p><h1 id="cd指令的使用"><a href="#cd指令的使用" class="headerlink" title="cd指令的使用"></a>cd指令的使用</h1><ul><li>回到根目录 <code>cd/</code></li><li>回到上一层目录 <code>cd..</code></li><li>进入任意目录<br>方法一：<br>(1)直接输入<code>[目录盘位]</code>如<code>D:</code><br>(2)输入<code>cd [目录相对路径]</code>如<code>cd Vue项目\Hello-world</code><br><img src="https://c2.im5i.com/2022/09/16/HSYqd.png" alt="HSYqd.png"><br>方法二：<br>输入<code>cd /d[目录绝对路径]</code><br><img src="https://c2.im5i.com/2022/09/16/HS9AR.png" alt="HS9AR.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机基础知识 </category>
          
          <category> cd指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cd指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript入门笔记（十一）异步编程</title>
      <link href="/2022/09/05/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/"/>
      <url>/2022/09/05/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript入门笔记（十）JSON</title>
      <link href="/2022/09/05/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%EF%BC%89JSON/"/>
      <url>/2022/09/05/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%EF%BC%89JSON/</url>
      
        <content type="html"><![CDATA[<h1 id="JSON（JavaScript-Object-Notaion）"><a href="#JSON（JavaScript-Object-Notaion）" class="headerlink" title="JSON（JavaScript Object Notaion）"></a>JSON（JavaScript Object Notaion）</h1><ul><li>一种轻量级的数据包交换格式</li><li>是独立的语言</li><li>易于理解</li></ul><h1 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h1><ul><li>数据为键值对<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;name&quot;</span>:<span class="string">&quot;Frank&quot;</span></span><br></pre></td></tr></table></figure></li><li>数据由逗号<code>,</code>分隔</li><li>大括号<code>&#123;&#125;</code>保存对象<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Frank&quot;</span>,<span class="string">&quot;url&quot;</span>:<span class="string">&quot;3nters.github.io&quot;</span>&#125;</span><br></pre></td></tr></table></figure></li><li>方括号<code>[]</code>保存数组<br><code>sites</code>是一个数组，包含三个对象，每个对象为站点信息<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;sites&quot;</span>:[</span><br><span class="line">  &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Frank&quot;</span>,<span class="string">&quot;url&quot;</span>:<span class="string">&quot;3nters.github.io&quot;</span>&#125;,</span><br><span class="line">  &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;url&quot;</span>:<span class="string">&quot;www.google.com&quot;</span>&#125;,</span><br><span class="line">  &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Taobao&quot;</span>, <span class="string">&quot;url&quot;</span>:<span class="string">&quot;www.taobao.com&quot;</span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h1 id="JSON字符串转换为JavaScript对象"><a href="#JSON字符串转换为JavaScript对象" class="headerlink" title="JSON字符串转换为JavaScript对象"></a>JSON字符串转换为JavaScript对象</h1>通常从服务器中读取<code>JSON</code>数据<br>图方便就用上面手动写的<code>JSON</code>数据用于演示<br><code>text</code>是<code>JSON</code>格式发到页面后的形式<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> text= <span class="string">&#x27;&#123;&quot;sites&quot;:[&#x27;</span>+</span><br><span class="line">    <span class="string">&#x27;&#123;&quot;name&quot;:&quot;Frank&quot;,&quot;url&quot;:&quot;3nters.github.io&quot;&#125;,&#x27;</span>+</span><br><span class="line">    <span class="string">&#x27;&#123;&quot;name&quot;:&quot;Google&quot;, &quot;url&quot;:&quot;www.google.com&quot;&#125;,&#x27;</span>+</span><br><span class="line">    <span class="string">&#x27;&#123;&quot;name&quot;:&quot;Taobao&quot;, &quot;url&quot;:&quot;www.taobao.com&quot;&#125;]&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> obj=<span class="title class_">JSON</span>.<span class="title function_">parse</span>(text);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = obj.<span class="property">sites</span>[<span class="number">1</span>].<span class="property">name</span> + <span class="string">&quot; &quot;</span> + obj.<span class="property">sites</span>[<span class="number">1</span>].<span class="property">url</span>;</span><br><span class="line"><span class="comment">//Google www.google.com</span></span><br></pre></td></tr></table></figure><h1 id="解析数据"><a href="#解析数据" class="headerlink" title="解析数据"></a>解析数据</h1><code>JSON</code>不能存储<code>Date()</code>对象，但是可以转换为字符串，之后再转换为<code>Date()</code>对象<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> text = <span class="string">&#x27;&#123; &quot;name&quot;:&quot;Runoob&quot;, &quot;initDate&quot;:&quot;2013-12-14&quot;, &quot;site&quot;:&quot;www.runoob.com&quot;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(text);</span><br><span class="line">obj.<span class="property">initDate</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(obj.<span class="property">initDate</span>);<span class="comment">//重新转换为Date对象</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = obj.<span class="property">name</span> + <span class="string">&quot;创建日期: &quot;</span> + obj.<span class="property">initDate</span>;</span><br><span class="line"><span class="comment">//Runoob创建日期: Sat Dec 14 2013 08:00:00 GMT+0800 (香港标准时间)</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="解析函数"><a href="#解析函数" class="headerlink" title="解析函数"></a>解析函数</h1><p><code>JSON</code>不能包含函数，但可以将函数作为字符串保存<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> text = <span class="string">&#x27;&#123; &quot;name&quot;:&quot;Runoob&quot;, &quot;alexa&quot;:&quot;function () &#123;return 10000;&#125;&quot;, &quot;site&quot;:&quot;www.runoob.com&quot;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(text);</span><br><span class="line">obj.<span class="property">alexa</span> = <span class="built_in">eval</span>(<span class="string">&quot;(&quot;</span> + obj.<span class="property">alexa</span> + <span class="string">&quot;)&quot;</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = obj.<span class="property">name</span> + <span class="string">&quot; Alexa 排名：&quot;</span> + obj.<span class="title function_">alexa</span>();</span><br><span class="line"><span class="comment">//10000</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
          <category> javaScript入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript调试错误总结</title>
      <link href="/2022/09/05/JavaScript%E8%B0%83%E8%AF%95%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93/"/>
      <url>/2022/09/05/JavaScript%E8%B0%83%E8%AF%95%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>有一点算一点吧，后面还要总结到相对应的部分里</p><ul><li><code>innerHtml</code>既可以用来插入也可以用来获取对象</li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript入门笔记（九）正则表达式</title>
      <link href="/2022/08/29/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2022/08/29/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><ul><li>正则表达式是由一个字符序列形成的搜索模式</li><li>正则表达式可以描述要查询的数据内容</li><li>正则表达式可以是一个简单的字符也可以是一个更复杂的模式</li><li>正则表达式可用于所有文本搜索和文本替换的操作</li></ul><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p><code>runoob</code>是一个正则表达式主体<br><code>i</code>是一个修饰符<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/正则表达式主体/修饰符(可选)</span><br><span class="line"><span class="keyword">var</span> patt=<span class="regexp">/runoob/i</span>;</span><br></pre></td></tr></table></figure></p><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><p>用于执行区分大小写和全局匹配</p><ul><li><code>i</code>执行对大小写不敏感的匹配</li><li><code>g</code>执行全局匹配（查找所有匹配而非在找到第一个后匹配停止）<blockquote><p>但还是只输出第一个的位置</p></blockquote></li><li><code>m</code>执行多行匹配</li></ul><h2 id="方括号"><a href="#方括号" class="headerlink" title="方括号"></a>方括号</h2><p>用于查找某个范围内的字符</p><ul><li><code>[abc]</code>查找括号之间的任何字符<ul><li><code>[0-9]</code>查找<code>0</code>到<code>9</code>之间的数字</li><li><code>[a-z]</code>查找从小写<code>a</code>到小写<code>z</code>的字符</li><li><code>[A-z]</code>查找从大写<code>a</code>到小写<code>z</code>的字符</li></ul></li><li><code>[^abc]</code>查找不在括号之间的字符<ul><li><code>[^a-z]</code>查找除小写<code>a</code>到小写<code>z</code>的字符</li></ul></li><li><code>(x|y)</code>查找任何以<code>|</code>分隔的选项</li></ul><h2 id="元字符-Metacharacter"><a href="#元字符-Metacharacter" class="headerlink" title="元字符(Metacharacter)"></a>元字符(Metacharacter)</h2><p>拥有特殊含义的字符（字符较多这里就记录几个常用的）</p><ul><li><code>.</code>查找单个字符，除了换行和行结束符</li><li><code>\w</code>查找数字、字母及下划线（这些也称为单词字符） <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Give 100%!&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> patt1=<span class="regexp">/\w/g</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(str.<span class="title function_">match</span>(patt1));</span><br><span class="line"><span class="comment">//输出 G，i，v，e，1，0，0</span></span><br></pre></td></tr></table></figure></li><li><code>\W</code>查找非单词字符</li><li><code>\d</code>查找数字</li><li><code>\D</code>查找非数字字符</li><li><code>\b</code>查找单词边界（常用于匹配以某个单词开头或结尾处） <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Visit Runooob&quot;</span>; </span><br><span class="line"><span class="keyword">var</span> patt1=<span class="regexp">/\bRun/g</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(str.<span class="title function_">match</span>(patt1));</span><br><span class="line"><span class="comment">//输出 Run</span></span><br></pre></td></tr></table></figure></li><li><code>\n</code>查找换行符</li><li><code>\uxxxx</code>查找以十六进制数<code>xxxx</code>规定的<code>Unicode</code>字符</li></ul><h2 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h2><ul><li><code>n+</code>匹配包含至少一个<code>n</code>的字符串(这个<code>n</code>可以替换成别的字符) <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Hellooo World! Hello Runoob!&quot;</span>; </span><br><span class="line"><span class="keyword">var</span> patt1=<span class="regexp">/o+/g</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(str.<span class="title function_">match</span>(patt1));</span><br></pre></td></tr></table></figure></li><li><code>n*</code>匹配包含零个或多个<code>n</code>的字符串</li><li><code>n？</code>匹配包含零个或一个<code>n</code>的字符串</li></ul><p>后面还有好多不细写了（等用上再查）<br><details class="toggle" ><summary class="toggle-button" style="">附表格</summary><div class="toggle-content"><table class="reference">  <tbody><tr>    <th style="width:20%">量词</th>    <th>描述</th>  </tr>  <tr>    <td>n{X}</td>    <td><p>匹配包含 X 个 n 的序列的字符串。</p><p>例如，/a{2}/ 不匹配 "candy," 中的 "a"，但是匹配 "caandy," 中的两个 "a"，且匹配 "caaandy." 中的前两个 "a"。</p></td>  </tr><tr><td>n{X,}</td><td><p>X 是一个正整数。前面的模式 n 连续出现至少 X 次时匹配。</p><p>例如，/a{2,}/ 不匹配 "candy" 中的 "a"，但是匹配 "caandy" 和 "caaaaaaandy." 中所有的 "a"。</p></td></tr>  <tr>    <td>n{X,Y}</td>    <td><p>X 和 Y 为正整数。前面的模式 n 连续出现至少 X 次，至多 Y 次时匹配。</p><p>例如，/a{1,3}/ 不匹配 "cndy"，匹配 "candy," 中的 "a"，"caandy," 中的两个 "a"，匹配 "caaaaaaandy" 中的前面三个 "a"。注意，当匹配 "caaaaaaandy" 时，即使原始字符串拥有更多的 "a"，匹配项也是 "aaa"。</p></td>  </tr>  <tr>    <td>n$</td>    <td>匹配任何结尾为 n 的字符串。</td>  </tr>  <tr>    <td>^n</td>    <td>匹配任何开头为 n 的字符串。</td>  </tr>  <tr>    <td>?=n</td>    <td>匹配任何其后紧接指定字符串 n 的字符串。</td>  </tr>  <tr>    <td>?!n</td>    <td>匹配任何其后没有紧接指定字符串 n 的字符串。</td>  </tr></tbody></table></div></details></p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h2 id="RegExp方法"><a href="#RegExp方法" class="headerlink" title="RegExp方法"></a>RegExp方法</h2><ul><li><code>exec()</code>检索字符串中的指定的值，返回找到的值，没找到就返回<code>null</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Hello world!&quot;</span>;<span class="comment">//查找Hello</span></span><br><span class="line"><span class="keyword">var</span> patt=<span class="regexp">/Hello/g</span>;</span><br><span class="line"><span class="keyword">var</span> result=patt.<span class="title function_">exec</span>(str);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;return:&#x27;</span>+result);</span><br><span class="line"><span class="comment">//return:Hello</span></span><br></pre></td></tr></table></figure></li><li><code>test()</code>检索字符串中的指定的值，返回<code>true</code>或<code>false</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">object.<span class="title function_">test</span>(string)</span><br></pre></td></tr></table></figure></li><li><code>toString</code>将正则表达式转化为字符串（本质上就是转换字符串）</li></ul><h2 id="支持正则的String对象方法"><a href="#支持正则的String对象方法" class="headerlink" title="支持正则的String对象方法"></a>支持正则的String对象方法</h2><ul><li><code>search()</code>检索与表达式相匹配的值，返回位置<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> n=str.<span class="title function_">search</span>(<span class="string">&quot;world&quot;</span>);</span><br><span class="line"><span class="comment">//6</span></span><br></pre></td></tr></table></figure></li><li><code>match()</code>找到一个或多个与表达式匹配的子串<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;The rain in SPAIN stays mainly in the plain&quot;</span>; </span><br><span class="line"><span class="keyword">var</span> n=str.<span class="title function_">match</span>(<span class="regexp">/ain/g</span>);</span><br><span class="line"><span class="comment">//ain,ain,ain</span></span><br></pre></td></tr></table></figure></li><li><code>replace()</code>替换与表达式匹配的子串<br>示例只替换一次，全部替换加<code>/g</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Visit Microsoft! Visit Microsoft!&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> n=str.<span class="title function_">replace</span>(<span class="string">&quot;Microsoft&quot;</span>,<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line"><span class="comment">//Visit Runoob!Visit Microsoft!</span></span><br></pre></td></tr></table></figure></li><li><p><code>split()</code>把字符串分割为字符串数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;How are you doing today?&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> n=str.<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line"><span class="comment">//How,are,you,doing,today?</span></span><br></pre></td></tr></table></figure><h2 id="RedExp对象属性"><a href="#RedExp对象属性" class="headerlink" title="RedExp对象属性"></a>RedExp对象属性</h2></li><li><code>global()</code>查看正则表达式是否具有标志<code>g</code>返回true或者false</li><li><code>ignoreCase()</code>查看正则表达式是否具有标志<code>i</code>返回true或者false</li><li><p><code>multiline()</code>查看正则表达式是否具有标志<code>m</code>返回true或者false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Visit RUNOOB!&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> patt1=<span class="regexp">/RUN/g</span>;</span><br><span class="line">patt1.<span class="property">global</span>;</span><br><span class="line">patt1.<span class="property">ignoreCase</span>;</span><br><span class="line">patt1.<span class="property">multiline</span>;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
          <category> javaScript入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript入门笔记（八）类型转换</title>
      <link href="/2022/08/23/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AB%EF%BC%89%E7%B1%BB%E5%9E%8B%E8%BD%AC%E5%8C%96/"/>
      <url>/2022/08/23/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AB%EF%BC%89%E7%B1%BB%E5%9E%8B%E8%BD%AC%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="转字符串"><a href="#转字符串" class="headerlink" title="转字符串"></a>转字符串</h1><p>全局方法<code>String()</code></p><blockquote><p>这里的<code>值</code>可以是任何类型</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">String</span>(值);</span><br></pre></td></tr></table></figure><p>方法<code>toString()</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">值.<span class="title function_">toString</span>();</span><br></pre></td></tr></table></figure></p><h2 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h2><blockquote><p>这里<code>值</code>只能是数字</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">String</span>(数字);</span><br><span class="line">值.<span class="title function_">toString</span>();</span><br></pre></td></tr></table></figure><h2 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h2><blockquote><p><code>true</code>同理</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">string</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="literal">false</span>.<span class="title function_">toString</span>();</span><br></pre></td></tr></table></figure><h2 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h2><blockquote><p>函数<code>Date()</code>自动返回字符串</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Date</span>();</span><br><span class="line"><span class="title class_">String</span>(<span class="title class_">Date</span>());</span><br><span class="line">obj=<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">obj.<span class="title function_">toString</span>();</span><br></pre></td></tr></table></figure><h1 id="转数字"><a href="#转数字" class="headerlink" title="转数字"></a>转数字</h1><p>全局方法<code>Number()</code>可以将字符串转化为数字，其他字符转成<code>NaN</code>(非数字)</p><h2 id="布尔值-1"><a href="#布尔值-1" class="headerlink" title="布尔值"></a>布尔值</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Number</span>(<span class="literal">false</span>);<span class="comment">//return 0</span></span><br><span class="line"><span class="title class_">Number</span>(<span class="literal">true</span>);<span class="comment">//return 1</span></span><br></pre></td></tr></table></figure><h2 id="日期-1"><a href="#日期-1" class="headerlink" title="日期"></a>日期</h2><p><code>getTime()</code>直接获取数字形式时间<br>获取的是从 1970 年 1 月 1 日午夜到指定日期之间的毫秒数</p><blockquote><p>所以每次刷新获取的值都不同</p></blockquote><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d=<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Number</span>(d)+<span class="string">&quot;&lt;br&gt; &quot;</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(d.<span class="title function_">getTime</span>());</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><script>d=new Date();document.write(Number(d)+"<br> ");document.write(d.getTime());</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="自动转换类型"><a href="#自动转换类型" class="headerlink" title="自动转换类型"></a>自动转换类型</h1><blockquote><p>当js尝试操作一个“错误”的数据类型时，会自动转换为“正确”的数据类型</p></blockquote><ul><li>数字<code>+null</code></li><li>字符串<code>+null</code></li><li>字符串<code>+</code>数字</li><li>字符串<code>-</code>数字</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> + <span class="literal">null</span>    <span class="comment">// 返回 5         null 转换为 0</span></span><br><span class="line"><span class="string">&quot;5&quot;</span> + <span class="literal">null</span>  <span class="comment">// 返回&quot;5null&quot;   null 转换为 &quot;null&quot;</span></span><br><span class="line"><span class="string">&quot;5&quot;</span> + <span class="number">1</span>     <span class="comment">// 返回 &quot;51&quot;      1 转换为 &quot;1&quot; </span></span><br><span class="line"><span class="string">&quot;5&quot;</span> - <span class="number">1</span>     <span class="comment">// 返回 4         &quot;5&quot; 转换为 5</span></span><br></pre></td></tr></table></figure><h2 id="转换为字符串"><a href="#转换为字符串" class="headerlink" title="转换为字符串"></a>转换为字符串</h2><p>当尝试输出对象或变量时js会自动调用变量的<code>toString()</code>方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">myVar = &#123;<span class="attr">name</span>:<span class="string">&quot;Fjohn&quot;</span>&#125;  <span class="comment">// toString 转换为 &quot;[object Object]&quot;</span></span><br><span class="line">myVar = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]       <span class="comment">// toString 转换为 &quot;1,2,3,4&quot;</span></span><br><span class="line">myVar = <span class="keyword">new</span> <span class="title class_">Date</span>()      <span class="comment">// toString 转换为 &quot;Fri Jul 18 2014 09:08:55 GMT+0200&quot;</span></span><br></pre></td></tr></table></figure><br>数字和布尔值也经常相互转换：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">myVar = <span class="number">123</span>             <span class="comment">// toString 转换为 &quot;123&quot;</span></span><br><span class="line">myVar = <span class="literal">true</span>            <span class="comment">// toString 转换为 &quot;true&quot;</span></span><br><span class="line">myVar = <span class="literal">false</span>           <span class="comment">// toString 转换为 &quot;false&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
          <category> javaScript入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript入门笔记（七）比较和逻辑运算符</title>
      <link href="/2022/08/22/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89%E6%AF%94%E8%BE%83%E5%92%8C%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2022/08/22/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89%E6%AF%94%E8%BE%83%E5%92%8C%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="比较和逻辑运算符"><a href="#比较和逻辑运算符" class="headerlink" title="比较和逻辑运算符"></a>比较和逻辑运算符</h1><h2 id="比较符号"><a href="#比较符号" class="headerlink" title="比较符号"></a>比较符号</h2><p>较为常规的有</p><ul><li><code>&gt; &lt; &gt;= &lt;= == !=</code></li></ul><p>javaScript特有的<code>绝对等于</code>和<code>不绝对等于</code></p><ul><li><code>===</code>绝对等于，指值和类型都相同</li><li><code>!===</code>不绝对等于，指值和类型任一不相同或都不相同</li></ul><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><ul><li><code>&amp;&amp;</code> 与(and)</li><li><code>||</code> 或(or)</li><li><code>!</code> 非(not)</li></ul><h2 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h2><p>如果变量 age 中的值小于 18，则向变量 voteable 赋值 “年龄太小”，否则赋值 “年龄已达到”。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age;</span><br><span class="line"><span class="keyword">var</span> voteable=(age&lt;<span class="number">18</span>)?<span class="string">&quot;年龄太小&quot;</span>:<span class="string">&quot;年龄已达到&quot;</span>;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
          <category> javaScript入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaScript入门笔记（六）字符串</title>
      <link href="/2022/08/21/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2022/08/21/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="javaScript字符串"><a href="#javaScript字符串" class="headerlink" title="javaScript字符串"></a>javaScript字符串</h1><ul><li>可以使用<code>&#39;&#39;</code>或<code>&quot;&quot;</code>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> carname1=<span class="string">&quot;Volvo XC60&quot;</span>;<span class="comment">//Volvo XC60</span></span><br><span class="line"><span class="keyword">var</span> carname2=<span class="string">&#x27;Volvo XC60&#x27;</span>;<span class="comment">//Volvo XC60</span></span><br></pre></td></tr></table></figure></li><li>可以使用索引（从<code>0</code>开始）访问字符串中任何字符</li><li>可以在字符串中使用转义字符<code>\</code>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> answer1=<span class="string">&#x27;It\&#x27;s alright&#x27;</span>;<span class="comment">//It&#x27;s alright</span></span><br><span class="line"><span class="keyword">var</span> answer2=<span class="string">&quot;He is called \&quot;Johnny\&quot;&quot;</span>;<span class="comment">//He is called &quot;Johnny&quot;</span></span><br><span class="line"><span class="keyword">var</span> answer3=<span class="string">&#x27;He is called &quot;Johnny&quot;&#x27;</span>;<span class="comment">//He is called &quot;Johnny&quot;</span></span><br></pre></td></tr></table></figure><h1 id="计算字符串长度"><a href="#计算字符串长度" class="headerlink" title="计算字符串长度"></a>计算字符串长度</h1></li></ul><p><code>length</code>是属性，不是方法所以不用加<code>()</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txt=<span class="string">&quot;asdasdas&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> ln=txt.<span class="property">length</span>;</span><br></pre></td></tr></table></figure></p><h1 id="查找字符串"><a href="#查找字符串" class="headerlink" title="查找字符串"></a>查找字符串</h1><blockquote><p>都是从<code>0</code>位置开始算，实际位置需要<code>+1</code></p><ul><li>使用<code>indexOf()</code>来定位字符串中某个字符首次出现位置</li><li>使用<code>lastIndexOf()</code>从字符串末尾来定位字符串中某个字符首次出现位置</li></ul></blockquote><p>不论从前还是从末尾找，给出的位置始终是字符串的索引值<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Hello world, welcome to the welcome.&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> n=str.<span class="title function_">indexOf</span>(<span class="string">&quot;welcome&quot;</span>);<span class="comment">//输出13</span></span><br><span class="line"><span class="keyword">var</span> n=str.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;welcome&quot;</span>);<span class="comment">//输出28</span></span><br></pre></td></tr></table></figure></p><h1 id="内容匹配"><a href="#内容匹配" class="headerlink" title="内容匹配"></a>内容匹配</h1><p><code>match()</code>函数用来查找字符串中特定的字符，并且如果找到的话则返回这个字符<br><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Hello world!&quot;</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(str.<span class="title function_">match</span>(<span class="string">&quot;world&quot;</span>)+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(str.<span class="title function_">match</span>(<span class="string">&quot;World&quot;</span>)+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(str.<span class="title function_">match</span>(<span class="string">&quot;world!&quot;</span>));</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><script>var str="Hello world!";document.write(str.match("world")+"<br>");document.write(str.match("World")+"<br>");document.write(str.match("world!"));</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h1 id="替换内容"><a href="#替换内容" class="headerlink" title="替换内容"></a>替换内容</h1><p><code>replace()</code>函数在字符串中用某些字符替换另一些字符<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Microsoft被Runoob替换</span></span><br><span class="line"><span class="keyword">var</span> str=<span class="string">&quot;Please visit Microsoft!&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> n=str.<span class="title function_">replace</span>(<span class="string">&quot;Microsoft&quot;</span>,<span class="string">&quot;Runoob&quot;</span>);</span><br></pre></td></tr></table></figure></p><h1 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h1><ul><li>转大写<code>toUpperCase()</code></li><li>转小写<code>toLowerCase()</code></li></ul><p>该方法不会改变源字符串<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txt=<span class="string">&quot;Hello World!&quot;</span>;       <span class="comment">// String</span></span><br><span class="line"><span class="keyword">var</span> txt1=txt.<span class="title function_">toUpperCase</span>();   <span class="comment">// txt1 文本会转换为大写</span></span><br><span class="line"><span class="keyword">var</span> txt2=txt.<span class="title function_">toLowerCase</span>();   <span class="comment">// txt2 文本会转换为小写</span></span><br></pre></td></tr></table></figure></p><h1 id="字符串转数组"><a href="#字符串转数组" class="headerlink" title="字符串转数组"></a>字符串转数组</h1><p>使用<code>split()</code>函数转数组<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">txt=<span class="string">&quot;a,b,c,d,e&quot;</span>   <span class="comment">// String</span></span><br><span class="line">txt.<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>);   <span class="comment">// 使用逗号分隔</span></span><br><span class="line">txt.<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>);   <span class="comment">// 使用空格分隔</span></span><br><span class="line">txt.<span class="title function_">split</span>(<span class="string">&quot;|&quot;</span>);   <span class="comment">// 使用竖线分隔 </span></span><br></pre></td></tr></table></figure></p><h1 id="字符串属性和方法"><a href="#字符串属性和方法" class="headerlink" title="字符串属性和方法"></a>字符串属性和方法</h1><blockquote><p>除了上面的几种再补充些我感觉比较常用的</p></blockquote><p>属性:</p><ul><li>prototype查看原型（一个能让外部函数访问到函数私有属性的中介）</li><li>constructor构造函数方法</li></ul><p>方法:</p><ul><li>substr()截取字符串<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txt=<span class="string">&quot;asdadwsda&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> x=txt.<span class="title function_">substr</span>(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">//截取下标1到3的字符串</span></span><br><span class="line"><span class="comment">//输出x=&quot;sda&quot;</span></span><br></pre></td></tr></table></figure></li></ul><p>更多详情在<a href="https://www.runoob.com/jsref/jsref-obj-string.html">String对象文档</a></p>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
          <category> javaScript入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript入门笔记（五）事件</title>
      <link href="/2022/08/21/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%E4%BA%8B%E4%BB%B6/"/>
      <url>/2022/08/21/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML事件"><a href="#HTML事件" class="headerlink" title="HTML事件"></a>HTML事件</h1><blockquote><p>包括浏览器行为和用户行为</p><ul><li>HTML页面加载完成</li><li>HTML<code>input</code>字段改变</li><li>HTML按钮被点击</li><li>etc</li></ul></blockquote><p>常见HTML事件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onchange<span class="comment">//HTML元素改变</span></span><br><span class="line">onclick<span class="comment">//用户点击HTML元素</span></span><br><span class="line">onmouseover<span class="comment">//鼠标悬停</span></span><br><span class="line">onmouseout<span class="comment">//鼠标移开</span></span><br><span class="line">onkeydown<span class="comment">//用户按下键盘按键</span></span><br><span class="line">onload<span class="comment">//浏览器页面加载完成</span></span><br></pre></td></tr></table></figure></p><h1 id="javaScript作用"><a href="#javaScript作用" class="headerlink" title="javaScript作用"></a>javaScript作用</h1><p>javascript可以在事件发生时执行动作</p><blockquote><p>前提是在<code>HTML</code>元素中添加事件属性</p></blockquote><ul><li>页面加载或关闭时触发事件</li><li>用户点击按钮执行动作</li><li>验证输入内容合法性</li><li>etc</li></ul><h1 id="小例子"><a href="#小例子" class="headerlink" title="小例子"></a>小例子</h1><p>通过用户点击显示时间</p><blockquote><p>预览里的文字得点一下</p></blockquote><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;displayDate() &quot;</span>&gt;</span>点这里<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">displayDate</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span>=<span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><p><button onclick="displayDate() ">点这里</button><br>    <script>    function displayDate(){        document.getElementById("demo").innerHTML=Date();    }    </script><br>    <p id="demo"></p></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
          <category> javaScript入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaScript入门笔记（四）函数</title>
      <link href="/2022/08/21/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%E5%87%BD%E6%95%B0/"/>
      <url>/2022/08/21/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="函数语法"><a href="#函数语法" class="headerlink" title="函数语法"></a>函数语法</h1><blockquote><p>关键字<code>function</code>必须小写<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">functionName</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//执行代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="带参函数"><a href="#带参函数" class="headerlink" title="带参函数"></a>带参函数</h2></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">functionName</span>(<span class="params">var1,var2</span>)&#123;</span><br><span class="line">    <span class="comment">//执行代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="带返回值的函数"><a href="#带返回值的函数" class="headerlink" title="带返回值的函数"></a>带返回值的函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> x=<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">return</span> x; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以返回表达式</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a*b; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以用于退出函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="局部变量与全局变量"><a href="#局部变量与全局变量" class="headerlink" title="局部变量与全局变量"></a>局部变量与全局变量</h1><h2 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h2><ul><li>函数内部声明的变量（使用 var）是局部变量，所以只能在函数内部访问它</li><li>不同函数可以使用名称相同的局部变量</li><li>生存周期为声明开始到函数运行后被删除</li></ul><h2 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h2><ul><li>函数外部声明的变量是全局变量，网页上的所有脚本和函数都能访问它</li><li>生存周期为声明开始到页面关闭后被删除</li></ul><blockquote><p>把值赋给未声明变量将自动作为全局变量的一个可配置属性（即使是在函数内声明）</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> var1 = <span class="number">1</span>; <span class="comment">// 不可配置全局属性</span></span><br><span class="line">var2 = <span class="number">2</span>; <span class="comment">// 没有使用 var 声明，可配置全局属性</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">var1</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">var1</span>); <span class="comment">// 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">var2</span>); <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> var1; <span class="comment">// false 无法删除</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(var1); <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> var2; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">delete</span> var2); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(var2); <span class="comment">// 已经删除 报错变量未定义</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
          <category> javaScript入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + Butterfly 建站记录（一）日常写作</title>
      <link href="/2022/08/20/Hexo%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%E6%97%A5%E5%B8%B8%E5%86%99%E4%BD%9C/"/>
      <url>/2022/08/20/Hexo%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%E6%97%A5%E5%B8%B8%E5%86%99%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>在根目录<code>git bash</code>使用<code>hexo new 文章名称</code>创建新文件<br>使用的都是<code>markdown</code>文档，后缀为<code>.md</code></p><h1 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h1><ul><li><code>title</code>: 文章标题</li><li><code>date</code>: 写作时间，编译器会将文档修改时间作为更新时间</li><li><code>categories</code>: 文章分类，语法为<code>categories: [A,B]</code>，表示本文属于<code>A</code>类下的<code>B</code>类</li><li><code>tags</code>:文章标签，语法为<code>tags: [A,B]</code>,表示文章有<code>A</code>和<code>B</code>两个标签</li></ul><h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><p><code>Markdown</code>是一种轻量级标记语言，语法十分简单，可与HTML混编，可导出 HTML、PDF 以及本身的 <code>.md</code> 格式的文件</p><blockquote><p>我推荐用<code>VsCode</code>来编辑文档<br>两三个插件就可以快速上手<code>Markdown All in One</code>、<code>Markdown Math</code>、<code>Markdown PDF</code></p></blockquote><details class="toggle" ><summary class="toggle-button" style="">Markdown基本</summary><div class="toggle-content"><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>用<code>#</code>来设置标题，有多少个<code>#</code>就代表是多少级标题</p><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 这是一级标题</span></span><br><span class="line"><span class="section">## 这是二级标题</span></span><br><span class="line"><span class="section">### 这是三级标题</span></span><br><span class="line"><span class="section">#### 这是四级标题</span></span><br><span class="line"><span class="section">##### 这是五级标题</span></span><br><span class="line"><span class="section">###### 这是六级标题</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><p>由于效果演示会破坏目录整齐性<br>效果还是自己试试吧<br>嘤嘤嘤~</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>字体样式有：加粗、倾斜、删除线，可相互叠加</p><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**这是加粗的文字**</span></span><br><span class="line"><span class="emphasis">*这是倾斜的文字*</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*这是斜体加粗的文字*</span>**</span></span><br><span class="line">~~这是加删除线的文字~~</span><br><span class="line">~~<span class="emphasis">*这是斜体删除的文字*</span>~~</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em><br><strong><em>这是斜体加粗的文字</em></strong><br><del>这是加删除线的文字</del><br><del><em>这是斜体删除的文字</em></del></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 这是引用</span></span><br><span class="line"><span class="quote">&gt; &gt;这是嵌套引用</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><blockquote><p>这是引用</p><blockquote><p>这是嵌套引用</p></blockquote></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 项目1</span><br><span class="line"><span class="bullet">-</span> 项目2</span><br><span class="line"><span class="bullet">-</span> 项目3</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><ul><li>项目1</li><li>项目2</li><li>项目3</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 项目1</span><br><span class="line"><span class="bullet">2.</span> 项目2</span><br><span class="line"><span class="bullet">3.</span> 项目3</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><ol><li>项目1</li><li>项目2</li><li>项目3</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>用<code>-</code>或<code>*</code>三个及以上都行</p><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">哔哩哔哩</span>](<span class="link">https://www.bilibili.com/</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><p><a href="https://www.bilibili.com/">哔哩哔哩</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>注意是<code>!</code>不是<code>！</code></p><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](<span class="link">/img/头像.jpg</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><p><img src="/img/头像.jpg" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h3><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`markdown`</span>行内代码,<span class="code">`&lt;`</span>是引用</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><p><code>markdown</code>行内代码,<code>&lt;</code>是引用</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```</span></span><br><span class="line"><span class="code">    &lt;p&gt;一段话&lt;/p&gt;</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一段话<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></div></details><h1 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h1><blockquote><p>标签外挂(Tag Plugins)不是标准的<code>markdown</code>格式</p></blockquote><p>本文标签外挂只用于<code>buttefly</code>主题<br>标签外挂能为主题带来一些额外的功能和<code>UI</code>强化，但也有明确的限制<br>以下仅为我常用的几个，更多详情在<a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">官方文档</a></p><h2 id="折叠栏-Toggle"><a href="#折叠栏-Toggle" class="headerlink" title="折叠栏(Toggle)"></a>折叠栏(Toggle)</h2><ul><li>代码:</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle 点击以打开 %&#125;</span><br><span class="line"></span><br><span class="line">内容</span><br><span class="line"></span><br><span class="line">&#123;% endhideToggle %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>预览:</li></ul><details class="toggle" ><summary class="toggle-button" style="">点击以打开</summary><div class="toggle-content"><p>内容</p></div></details><h2 id="选项卡-Tabs"><a href="#选项卡-Tabs" class="headerlink" title="选项卡(Tabs)"></a>选项卡(Tabs)</h2><ul><li>代码:</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs 样例 %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 代码  --&gt;</span><br><span class="line"></span><br><span class="line">这里是代码</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 预览  --&gt;</span><br><span class="line"></span><br><span class="line">这里是预览</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><ul><li>预览:</li></ul><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><p>这里是代码</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><p>这里是预览</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="时间轴-Timeline"><a href="#时间轴-Timeline" class="headerlink" title="时间轴(Timeline)"></a>时间轴(Timeline)</h2><ul><li>代码:</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022 %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><ul><li><p>预览:</p><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo + Butterfly 建站记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaScript入门笔记（三）对象</title>
      <link href="/2022/08/20/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%E5%AF%B9%E8%B1%A1/"/>
      <url>/2022/08/20/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>对象是变量(键值对)的容器</p></blockquote><h1 id="定义对象"><a href="#定义对象" class="headerlink" title="定义对象"></a>定义对象</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person =&#123;</span><br><span class="line">    <span class="comment">// key:value</span></span><br><span class="line">    <span class="attr">firstName</span>: <span class="string">&quot;Frank&quot;</span>,</span><br><span class="line">    <span class="attr">lastName</span>:<span class="string">&quot;Liang&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">21</span>,</span><br><span class="line">    <span class="attr">eyeColor</span>:<span class="string">&quot;black&quot;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="对象属性"><a href="#对象属性" class="headerlink" title="对象属性"></a>对象属性</h1><p>即对象中的键值对<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">firstName</span>: <span class="string">&quot;Frank&quot;</span>,</span><br><span class="line"><span class="attr">lastName</span>: <span class="string">&quot;Liang&quot;</span>,</span><br><span class="line"><span class="attr">age</span>: <span class="number">21</span>,</span><br><span class="line"><span class="attr">eyeColor</span>: <span class="string">&quot;black&quot;</span></span><br></pre></td></tr></table></figure></p><h1 id="访问对象属性"><a href="#访问对象属性" class="headerlink" title="访问对象属性"></a>访问对象属性</h1><p>两种方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">person.<span class="property">firstName</span>;</span><br><span class="line">person[<span class="string">&quot;firstName&quot;</span>];</span><br></pre></td></tr></table></figure></p><h1 id="对象方法"><a href="#对象方法" class="headerlink" title="对象方法"></a>对象方法</h1><p>对象内定义的函数<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person =&#123;</span><br><span class="line">    <span class="comment">// key:value</span></span><br><span class="line">    <span class="attr">firstName</span>: <span class="string">&quot;Frank&quot;</span>,</span><br><span class="line">    <span class="attr">lastName</span>:<span class="string">&quot;Liang&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">21</span>,</span><br><span class="line">    <span class="attr">eyeColor</span>:<span class="string">&quot;black&quot;</span></span><br><span class="line">    <span class="comment">// 对象方法</span></span><br><span class="line">    <span class="attr">fullName</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span>+<span class="string">&quot; &quot;</span>+<span class="variable language_">this</span>.<span class="property">lastName</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h1 id="访问对象方法"><a href="#访问对象方法" class="headerlink" title="访问对象方法"></a>访问对象方法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">methodName</span>();</span><br></pre></td></tr></table></figure><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person =&#123;</span><br><span class="line">    <span class="comment">// key:value</span></span><br><span class="line">    <span class="attr">firstName</span>: <span class="string">&quot;Frank&quot;</span>,</span><br><span class="line">    <span class="attr">lastName</span>:<span class="string">&quot;Liang&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">21</span>,</span><br><span class="line">    <span class="attr">eyeColor</span>:<span class="string">&quot;black&quot;</span>,</span><br><span class="line">    <span class="comment">// 对象方法</span></span><br><span class="line">    <span class="attr">fullName</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span>+<span class="string">&quot; &quot;</span>+<span class="variable language_">this</span>.<span class="property">lastName</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> <span class="variable constant_">P1</span>=person.<span class="title function_">fullName</span>();</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="variable constant_">P1</span>);</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><script>var person ={    // key:value    firstName: "Frank",    lastName:"Liang",    age:21,    eyeColor:"black",    // 对象方法    fullName: function(){        return this.firstName+" "+this.lastName;    }};var P1=person.fullName();document.write(P1);</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>不加<code>()</code>则会返回函数的定义<br><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person =&#123;</span><br><span class="line">    <span class="comment">// key:value</span></span><br><span class="line">    <span class="attr">firstName</span>: <span class="string">&quot;Frank&quot;</span>,</span><br><span class="line">    <span class="attr">lastName</span>:<span class="string">&quot;Liang&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">21</span>,</span><br><span class="line">    <span class="attr">eyeColor</span>:<span class="string">&quot;black&quot;</span>,</span><br><span class="line">    <span class="comment">// 对象方法</span></span><br><span class="line">    <span class="attr">fullName</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span>+<span class="string">&quot; &quot;</span>+<span class="variable language_">this</span>.<span class="property">lastName</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> <span class="variable constant_">P1</span>=person.<span class="property">fullName</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="variable constant_">P1</span>);</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><script>var person ={    // key:value    firstName: "Frank",    lastName:"Liang",    age:21,    eyeColor:"black",    // 对象方法    fullName: function(){        return this.firstName+" "+this.lastName;    }};var P1=person.fullName;document.write(P1);</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
          <category> javaScript入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaScript入门笔记（二）数据类型</title>
      <link href="/2022/08/19/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2022/08/19/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>基本数据类型：字符串（String）、数字(Number)、布尔(Boolean)、空（Null）、未定义（Undefined）、Symbol<br>引用数据类型（对象类型）：对象(Object)、数组(Array)、函数(Function)，还有两个特殊的对象：正则（RegExp）和日期（Date）</p><blockquote><p>NaN是number<br>null是object</p><h1 id="动态数据类型"><a href="#动态数据类型" class="headerlink" title="动态数据类型"></a>动态数据类型</h1><p>意味着相同变量可用作不同的类型<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x;<span class="comment">//Undefined(未定义)</span></span><br><span class="line"><span class="keyword">var</span> x=<span class="number">5</span>;<span class="comment">//Number(数值)</span></span><br><span class="line"><span class="keyword">var</span> x= <span class="string">&quot;John&quot;</span>;<span class="comment">//String(字符串)</span></span><br></pre></td></tr></table></figure><br>可使用<code>typeof</code>操作符查看数据类型<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="string">&quot;John&quot;</span>                <span class="comment">// 返回 string</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">3.14</span>                  <span class="comment">// 返回 number</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">false</span>                 <span class="comment">// 返回 boolean</span></span><br><span class="line"><span class="keyword">typeof</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]             <span class="comment">// 返回 object</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;<span class="attr">name</span>:<span class="string">&#x27;John&#x27;</span>, <span class="attr">age</span>:<span class="number">34</span>&#125; <span class="comment">// 返回 object</span></span><br></pre></td></tr></table></figure></p></blockquote><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><p>是存储字符的变量，可以是引号(<code>&quot;&quot; / &#39;&#39;</code>)中的任意文本<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> carname=<span class="string">&quot;Volvo XC60&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> carname=<span class="string">&#x27;Volvo XC60&#x27;</span>;</span><br></pre></td></tr></table></figure></p><h1 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h1><blockquote><p>它能表示最大值（Number.MAX_VALUE）为 ±1.7976931348623157e+308，最小值（Number.MIN_VALUE）为 ±5e-324</p></blockquote><p>只有一种数字类型(浮点型)，可带小数点也可不带<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x1=<span class="number">12.00</span>;</span><br><span class="line"><span class="keyword">var</span> x2=<span class="number">12</span>;</span><br></pre></td></tr></table></figure><br>可以通过科学计数法来书写极大或极小值<br><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x1=<span class="number">123e5</span>;</span><br><span class="line"><span class="keyword">var</span> x2=<span class="number">123</span>-e5;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(x1+<span class="string">&quot;&lt;br&gt;&quot;</span>+x2);</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><script>var x1=123e5;var x2=123e-5;document.write(x1 + "<br>"+ x2)</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h2 id="精度"><a href="#精度" class="headerlink" title="精度"></a>精度</h2><p>整数（不使用小数点和指数计数法）最多为15位</p><blockquote><p>大于15位则均为10e17<br><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> x=<span class="number">999999999999999</span>;<span class="comment">//15个9</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> y=<span class="number">9999999999999999</span>;<span class="comment">//16个9</span></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(x+<span class="string">&quot;&lt;br&gt;&quot;</span>+y);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><script>var x=999999999999999;//15个9var y=9999999999999999;//16个9document.write(x+"<br>"+y);</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p></blockquote><h2 id="八进制和十六进制"><a href="#八进制和十六进制" class="headerlink" title="八进制和十六进制"></a>八进制和十六进制</h2><ul><li>前缀为<code>0</code>则解释为八进制数</li><li>前缀为<code>0x</code>则解释为十六进制</li></ul><blockquote><p>没事别在数字前加<code>0</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> y=<span class="number">0377</span>;<span class="comment">//八进制</span></span><br><span class="line"><span class="keyword">var</span> z=<span class="number">0xff</span>;<span class="comment">//十六进制</span></span><br></pre></td></tr></table></figure><br>使用<code>toString()</code>方法输出16进制、8进制、2进制<br><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> myNumber=<span class="number">128</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;十六：&quot;</span>+myNumber.<span class="title function_">toString</span>(<span class="number">16</span>)+<span class="string">&quot;&lt;br&gt;&quot;</span>);<span class="comment">//十六进制</span></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;八：&quot;</span>+myNumber.<span class="title function_">toString</span>(<span class="number">8</span>)+<span class="string">&quot;&lt;br&gt;&quot;</span>);<span class="comment">//八进制</span></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;二：&quot;</span>+myNumber.<span class="title function_">toString</span>(<span class="number">2</span>)+<span class="string">&quot;&lt;br&gt;&quot;</span>);<span class="comment">//二进制</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><script>var myNumber=128;document.write("十六："+myNumber.toString(16)+"<br>");//十六进制document.write("八："+myNumber.toString(8)+"<br>");//八进制document.write("二："+myNumber.toString(2)+"<br>");//二进制</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p></blockquote><h2 id="无穷大（Infinity）"><a href="#无穷大（Infinity）" class="headerlink" title="无穷大（Infinity）"></a>无穷大（Infinity）</h2><ul><li>计算值超出上限时结果为一个特殊的无穷大（Infinity）值</li><li>计算值超过负数范围时结果为一个负无穷大值（-Infinity）值</li></ul><blockquote><p>基于无穷大的加减乘除运算还是无穷大（正负符号也保留）</p></blockquote><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> x=<span class="number">2</span>; </span></span><br><span class="line"><span class="language-javascript"><span class="keyword">while</span>(x!=<span class="title class_">Infinity</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    x=x*x;<span class="comment">//一直平方到无穷大</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(x+<span class="string">&quot;&lt;br&gt;&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//除以0也能获得无穷大</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> y=<span class="number">2</span>/<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> z=-<span class="number">2</span>/<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(y+<span class="string">&quot;&lt;br&gt;&quot;</span>+z)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><script>var x=2; while(x!=Infinity){    x=x*x;//一直平方到无穷大}document.write(x+"<br>")//除以0也能获得无穷大var y=2/0;var z=-2/0;document.write(y+"<br>"+z)</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="NaN非数字"><a href="#NaN非数字" class="headerlink" title="NaN非数字"></a>NaN非数字</h2><ul><li>NaN代表非数字值的特殊值，用于指示某个值不是数字</li><li>Number对象设置为Nan来指示其不是数字值</li><li><code>isNaN()</code>全局函数用于判断一个值是否为NaN</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="number">1000</span>/<span class="string">&quot;Apple&quot;</span>;</span><br><span class="line"><span class="built_in">isNaN</span>(x);<span class="comment">//return true</span></span><br><span class="line"><span class="keyword">var</span> y=<span class="number">100</span> /<span class="string">&quot;1000&quot;</span>;</span><br><span class="line"><span class="built_in">isNaN</span>(y);<span class="comment">//return false</span></span><br><span class="line"><span class="keyword">var</span> z=<span class="number">1000</span>/<span class="number">0</span>;</span><br><span class="line"><span class="built_in">isNaN</span>(z);<span class="comment">//return false;无穷大是数字</span></span><br></pre></td></tr></table></figure><h2 id="数字对象"><a href="#数字对象" class="headerlink" title="数字对象"></a>数字对象</h2><p>数字对象初始化，<code>var y = new Number(123)</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> y = <span class="keyword">new</span> <span class="title class_">Number</span>(<span class="number">123</span>);</span><br><span class="line"><span class="title function_">typeof</span>(y);<span class="comment">//return Object</span></span><br></pre></td></tr></table></figure></p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><table class="reference"> <thead>  <tr>   <th>属性</th>   <th>描述</th>  </tr> </thead> <tbody>  <tr>   <td>Number.MAX_VALUE</td>   <td>最大值</td>  </tr>  <tr>   <td>Number.MIN_VALUE</td>   <td>最小值</td>  </tr>  <tr>   <td>Number.NaN</td>   <td>非数字</td>  </tr>  <tr>   <td>Number.NEGATIVE_INFINITY</td>   <td>负无穷，在溢出时返回</td>  </tr>  <tr>   <td>Number.POSITIVE_INFINITY</td>   <td>正无穷，在溢出时返回</td>  </tr>  <tr>   <td>Number.EPSILON</td>   <td>    <p>表示 1 和比最接近 1 且大于 1 的最小 Number 之间的差别</p>   </td>  </tr>  <tr>   <td>Number.MIN_SAFE_INTEGER</td>   <td>最小安全整数。</td>  </tr>  <tr>   <td>Number.MAX_SAFE_INTEGER</td>   <td>最大安全整数。</td>  </tr> </tbody></table><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><table class="reference"> <thead>  <tr>   <th>方法</th>   <th>描述</th>  </tr> </thead> <tbody>  <tr>   <td>Number.parseFloat()</td>   <td>将字符串转换成浮点数，和全局方法 parseFloat()</a> 作用一致。</td>  </tr>  <tr>   <td>Number.parseInt()</td>   <td>    <p>将字符串转换成整型数字，和全局方法 parseInt()</a> 作用一致。</p>   </td>  </tr>  <tr>   <td>Number.isFinite()</td>   <td>判断传递的参数是否为有限数字。</td>  </tr>  <tr>   <td>Number.isInteger()</td>   <td>判断传递的参数是否为整数。</td>  </tr>  <tr>   <td>Number.isNaN()</td>   <td>判断传递的参数是否为&nbsp;isNaN()。</td>  </tr>  <tr>   <td>Number.isSafeInteger()</td>   <td>判断传递的参数是否为安全整数。</td>  </tr>  <tr>   <td>toExponential()</td>   <td>返回一个数字的指数形式的字符串，如：1.23e+2</td>  </tr>  <tr>   <td>toFixed()</td>   <td>返回指定小数位数的表示形式。   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="number">123</span>;</span><br><span class="line">b=a.<span class="title function_">toFixed</span>(<span class="number">2</span>);<span class="comment">// b=&quot;123.00&quot;</span></span><br></pre></td></tr></table></figure>   </td>  </tr>  <tr>   <td>toPrecision()</td>   <td>返回一个指定精度的数字。如下例子中，a=123 中，3会由于精度限制消失:   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="number">123</span>;</span><br><span class="line">b=a.<span class="title function_">toPrecision</span>(<span class="number">2</span>); <span class="comment">// b=&quot;1.2e+2&quot;</span></span><br></pre></td></tr></table></figure>   </td>  </tr> </tbody></table><h1 id="布尔"><a href="#布尔" class="headerlink" title="布尔"></a>布尔</h1><p>只能有两个值:<code>true</code>和<code>false</code></p><h1 id="Undefined和Null"><a href="#Undefined和Null" class="headerlink" title="Undefined和Null"></a>Undefined和Null</h1><ul><li>Undefined表示这个变量不含有值</li><li>Null赋给变量来清空变量<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cars =<span class="literal">null</span>;</span><br></pre></td></tr></table></figure></li></ul><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p>三种创建方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="keyword">var</span> cars=<span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line">cars[<span class="number">0</span>]=<span class="string">&quot;Saab&quot;</span>;</span><br><span class="line">cars[<span class="number">1</span>]=<span class="string">&quot;Volvo&quot;</span>;</span><br><span class="line">cars[<span class="number">2</span>]=<span class="string">&quot;BMW&quot;</span>;</span><br><span class="line"><span class="comment">//2 </span></span><br><span class="line"><span class="keyword">var</span> cars=<span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;Saab&quot;</span>,<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>)</span><br><span class="line"><span class="comment">//3 类似于c数组创建</span></span><br><span class="line"><span class="keyword">var</span> cars=[<span class="string">&quot;Saab&quot;</span>,<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>];</span><br></pre></td></tr></table></figure></p><h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person=&#123;<span class="attr">firstName</span>:<span class="string">&quot;John&quot;</span>,<span class="attr">lastName</span>:<span class="string">&quot;Doe&quot;</span>,<span class="attr">id</span>:<span class="number">5566</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> person=&#123;</span><br><span class="line">    <span class="attr">firstName</span>:<span class="string">&quot;John&quot;</span>,</span><br><span class="line">    <span class="attr">lastName</span>:<span class="string">&quot;Doe&quot;</span>,</span><br><span class="line">    <span class="attr">id</span>:<span class="number">5566</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>寻址方式(两种)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=person.<span class="property">lastName</span>;</span><br><span class="line">name=person[<span class="string">&quot;lastName&quot;</span>];</span><br></pre></td></tr></table></figure></p><h1 id="声明变量类型"><a href="#声明变量类型" class="headerlink" title="声明变量类型"></a>声明变量类型</h1><p>关键字<code>new</code>来声明其类型<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> carname= <span class="keyword">new</span> <span class="title class_">String</span>;</span><br><span class="line"><span class="keyword">var</span> x      = <span class="keyword">new</span> <span class="title class_">Number</span>;</span><br><span class="line"><span class="keyword">var</span> y      = <span class="keyword">new</span> <span class="title class_">Boolean</span>;</span><br><span class="line"><span class="keyword">var</span> cars   = <span class="keyword">new</span> <span class="title class_">Array</span>;</span><br><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="title class_">Object</span>;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
          <category> javaScript入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaScript入门笔记（一）基本语法</title>
      <link href="/2022/08/18/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/08/18/JavaScript%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>三马车之javaScript，控制页面的行为</p></blockquote><h1 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h1><p>简单输出<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 内容写入弹出窗口</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;HelloWorld!&#x27;</span>);</span><br><span class="line"><span class="comment">// 内容写入hml文档</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;HelloWorld!&#x27;</span>);</span><br><span class="line"><span class="comment">// 内容写入浏览器控制台</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;HelloWorld!&#x27;</span>)</span><br></pre></td></tr></table></figure></p><p>通过<code>id</code>选择性输出<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 选取id=demo的元素并innerHTML来获取或插入元素内容</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;段落已修改&quot;</span>;</span><br><span class="line"><span class="comment">//  获取id=demo元素的值</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">value</span>;</span><br></pre></td></tr></table></figure></p><p>通过<code>button</code>行为调用<code>函数</code>输出<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过按钮来执行输出函数(显示时间)</span></span><br><span class="line">&lt;button onclick=<span class="string">&quot;myFunction()&quot;</span>&gt;点我&lt;/button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title class_">Date</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><blockquote><p>类似于c的注释</p></blockquote><p>单行注释<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这是一行注释</span></span><br></pre></td></tr></table></figure><br>多行注释<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是多行注释1</span></span><br><span class="line"><span class="comment">这是多行注释2</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><br>行末使用注释<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">Ez</span>=<span class="number">666</span>;<span class="comment">//声明Ez并赋值666</span></span><br></pre></td></tr></table></figure></p><h1 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h1><p>一般固定值被称为字面量</p><h2 id="数字字面量"><a href="#数字字面量" class="headerlink" title="数字字面量"></a>数字字面量</h2><p>  小数 整数 科学计数(e)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.14</span> ;<span class="number">1001</span> ;<span class="number">123e5</span> ;</span><br></pre></td></tr></table></figure></p><h2 id="字符字面量"><a href="#字符字面量" class="headerlink" title="字符字面量"></a>字符字面量</h2><p> 可使用单引号或双引号<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;Frank Cassidy&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;Frank Cassidy&#x27;</span></span><br></pre></td></tr></table></figure></p><h2 id="表达式字面量"><a href="#表达式字面量" class="headerlink" title="表达式字面量"></a>表达式字面量</h2><p> 用于计算<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span> + <span class="number">6</span>;</span><br><span class="line"><span class="number">5</span> * <span class="number">10</span>;</span><br></pre></td></tr></table></figure></p><h2 id="数组字面量"><a href="#数组字面量" class="headerlink" title="数组字面量"></a>数组字面量</h2><p>定义数组<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">40</span>, <span class="number">100</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">25</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure></p><h2 id="对象字面量"><a href="#对象字面量" class="headerlink" title="对象字面量"></a>对象字面量</h2><p>定义对象，里面类似于c++的成员<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">firstName</span>:<span class="string">&quot;John&quot;</span>, <span class="attr">lastName</span>:<span class="string">&quot;Doe&quot;</span>, <span class="attr">age</span>:<span class="number">50</span>,<span class="attr">eyeColor</span>:<span class="string">&quot;black&quot;</span>&#125;</span><br></pre></td></tr></table></figure></p><h2 id="函数字面量"><a href="#函数字面量" class="headerlink" title="函数字面量"></a>函数字面量</h2><p>可以返回为值或直接空<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myFunciton</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>通常用关键字<code>var</code>定义变量，使用<code>=</code>给变量赋值<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x, length;</span><br><span class="line">x = <span class="number">5</span>;</span><br><span class="line">lenght = <span class="number">6</span>;</span><br></pre></td></tr></table></figure></p><h2 id="一条语句多个变量"><a href="#一条语句多个变量" class="headerlink" title="一条语句多个变量"></a>一条语句多个变量</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一行声明</span></span><br><span class="line"><span class="keyword">var</span> lastname=<span class="string">&quot;Doe&quot;</span>, age=<span class="number">30</span>, job=<span class="string">&quot;carpenter&quot;</span>;</span><br><span class="line"><span class="comment">//跨行声明</span></span><br><span class="line"><span class="keyword">var</span> lastname=<span class="string">&quot;Doe&quot;</span>,</span><br><span class="line">age=<span class="number">30</span>,</span><br><span class="line">job=<span class="string">&quot;carpenter&quot;</span>;</span><br></pre></td></tr></table></figure><p>禁止🚫多个变量同时赋同一个值<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x,y,z=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><br>x,y为undefined，z为1</p><h1 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h1><p>算术运算符&amp;赋值运算符<br><code>+ - * / =</code></p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>字面量的类型：数据类型。有六种</p><ul><li>String(字符串)</li><li>Number(数值) </li><li>Boolean(布尔值)</li><li>Null (空值)</li><li>Undefined(未定义)</li><li>Object(对象)</li></ul><blockquote><p>基本数据类型：String(字符串)、Number(数值)、Boolean(布尔值)、 Null (空值)、Undefined(未定义)<br>引用数据类型：Object(对象)</p></blockquote><p>一般的变量命名后未赋值，此时为<code>Undefiend</code>未定义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="number">16</span>+<span class="string">&quot;Volve&quot;</span>)</span><br><span class="line"><span class="comment">// 输出16Volve</span></span><br></pre></td></tr></table></figure><h1 id="字母大小写-amp-字符集"><a href="#字母大小写-amp-字符集" class="headerlink" title="字母大小写&amp;字符集"></a>字母大小写&amp;字符集</h1><blockquote><p>js对字母大小写严格区分<br>js使用Unicode字符集</p></blockquote><p>函数 getElementById 与 getElementbyID 是不同的。<br>同样，变量 myVariable 与 MyVariable 也是不同的。</p><h1 id="代码-amp-代码块形式"><a href="#代码-amp-代码块形式" class="headerlink" title="代码&amp;代码块形式"></a>代码&amp;代码块形式</h1><p>浏览器按照代码编写顺序依次执行每条语句<br>向网页输出两个段落<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;Hello Dolly&quot;</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myDiv&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;最近如何？&quot;</span>;</span><br></pre></td></tr></table></figure><br>代码块以左花括号开始，以右花括号结束。一并地执行语句序列<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ocument.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;Hello Dolly&quot;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;myDiv&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;最近如何？&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h1><ul><li>js中自主命名的都是标识符</li><li>例如变量名、函数名、属性名</li><li>命名规则<br>  1.含有字母、数字、_、$<br>  2.不能数字开头<br>  3.不能是关键字和保留字<br>  4.驼峰命名法<ul><li>首字母小写，每个单词开头大写，其余小写<br>  例如：helloWorld</li></ul></li><li>以下列出关键字  <details class="toggle" ><summary class="toggle-button" style="">点击以打开</summary><div class="toggle-content">  <table class="reference"><tbody><tr>    <th>语句</th>    <th>描述</th></tr><tr><td>break</td><td>用于跳出循环。</td></tr><tr><td>catch</td><td>语句块，在 try 语句块执行出错时执行 catch 语句块。</td></tr><tr><td>continue</td><td>跳过循环中的一个迭代。</td></tr><tr><td>do ... while</td><td>执行一个语句块，在条件语句为 true 时继续执行该语句块。</td></tr><tr><td>for</td><td>在条件语句为 true 时，可以将代码块执行指定的次数。 </td></tr><tr><td>for ... in </td><td>用于遍历数组或者对象的属性（对数组或者对象的属性进行循环操作）。</td></tr><tr><td>function</td><td>定义一个函数</td></tr><tr><td>if ... else</td><td>用于基于不同的条件来执行不同的动作。</td></tr><tr><td>return</td><td>退出函数</td></tr><tr><td>switch</td><td>用于基于不同的条件来执行不同的动作。</td></tr><tr><td>throw</td><td>抛出（生成）错误 。 </td></tr><tr><td>try</td><td>实现错误处理，与 catch 一同使用。 </td></tr><tr><td>var</td><td>声明一个变量。</td></tr><tr><td>while</td><td>当条件语句为 true 时，执行语句块。 </td></tr></tbody></table></div></details></li></ul><h1 id="多行写一句-amp-一行写多句"><a href="#多行写一句-amp-一行写多句" class="headerlink" title="多行写一句&amp;一行写多句"></a>多行写一句&amp;一行写多句</h1><p>使用反斜杠对代码进行换行<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;Hello\</span></span><br><span class="line"><span class="string">!World&quot;</span>);</span><br></pre></td></tr></table></figure><br>用<code>;</code>隔开<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;HelloWorld!&quot;</span>);doucment.<span class="title function_">write</span>(<span class="string">&quot;Ty&quot;</span>);</span><br></pre></td></tr></table></figure></p><h1 id="选择与循环"><a href="#选择与循环" class="headerlink" title="选择与循环"></a>选择与循环</h1><h2 id="If"><a href="#If" class="headerlink" title="If"></a>If</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (condition1)&#123;</span><br><span class="line">    当条件<span class="number">1</span>为<span class="literal">true</span>时执行代码</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(condition2) &#123;</span><br><span class="line">    当条件<span class="number">2</span>为<span class="literal">true</span>时执行代码</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    当条件<span class="number">1</span>和条件<span class="number">2</span>都不为<span class="literal">true</span>时执行代码</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(n)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        执行代码块<span class="number">1</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        执行代码块<span class="number">2</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">        与<span class="keyword">case</span> <span class="number">1</span>和<span class="keyword">case</span> <span class="number">2</span> 不同时执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="For"><a href="#For" class="headerlink" title="For"></a>For</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(语句<span class="number">1</span>;语句<span class="number">2</span>;语句<span class="number">3</span>)&#123;</span><br><span class="line">    被执行的代码块</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="For-In循环"><a href="#For-In循环" class="headerlink" title="For/In循环"></a>For/In循环</h2><p>遍历对象的属性<br><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> x;<span class="comment">//x为person的属性名</span></span><br><span class="line"><span class="keyword">var</span> txt=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> person=&#123;<span class="attr">fname</span>:<span class="string">&quot;Bill&quot;</span>,<span class="attr">lname</span>:<span class="string">&quot;Gates&quot;</span>,<span class="attr">age</span>:<span class="number">56</span>&#125;; </span><br><span class="line"><span class="keyword">for</span> (x <span class="keyword">in</span> person)&#123;</span><br><span class="line">txt=txt + person[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(txt);</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><p><p id="demo"></p></p><script>    var x;    var txt="";    var person={fname:"Bill",lname:"Gates",age:56};     for (x in person){        txt=txt + person[x];    }    document.getElementById("demo").innerHTML=txt;</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h2 id="while-amp-do-while循环"><a href="#while-amp-do-while循环" class="headerlink" title="while&amp;do/while循环"></a>while&amp;do/while循环</h2><p>与c语言的类似<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (condition)&#123;</span><br><span class="line">    code1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    code1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(condition);</span><br></pre></td></tr></table></figure></p><h2 id="Break"><a href="#Break" class="headerlink" title="Break"></a>Break</h2><p>用于跳出循环，继续执行循环后的的代码</p><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>,x=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x=x+<span class="string">&quot;The number is &quot;</span>+ i +<span class="string">&quot; &lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(x);</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><script>var i=0,x="";for(i=0;i<10;i++){    if(i==3){        break;    }    x=x+"The number is "+ i +" <br>";}document.write(x);</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Continue"><a href="#Continue" class="headerlink" title="Continue"></a>Continue</h2><p>用于中断循环本次迭代，继续循环下一个迭代<br><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>,x=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">3</span>)&#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    x=x+<span class="string">&quot;The number is &quot;</span>+ i +<span class="string">&quot; &lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(x);</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><script>var i=0,x="";for(i=0;i<10;i++){    if(i==3){        i++;        continue;    }    x=x+"The number is "+ i +" <br>";}document.write(x);</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h2 id="js标记"><a href="#js标记" class="headerlink" title="js标记"></a>js标记</h2><p>如需标记js语句，请在语句之前加上冒号<br><div class="tabs" id="样例"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#样例-1">代码</button></li><li class="tab"><button type="button" data-href="#样例-2">预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="样例-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cars=[<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;Saab&quot;</span>,<span class="string">&quot;Ford&quot;</span>];</span><br><span class="line"><span class="attr">list</span>:&#123;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(cars[<span class="number">0</span>] + <span class="string">&quot;&lt;br&gt;&quot;</span>); </span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(cars[<span class="number">1</span>] + <span class="string">&quot;&lt;br&gt;&quot;</span>); </span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(cars[<span class="number">2</span>] + <span class="string">&quot;&lt;br&gt;&quot;</span>); </span><br><span class="line"><span class="keyword">break</span> list;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(cars[<span class="number">3</span>] + <span class="string">&quot;&lt;br&gt;&quot;</span>); </span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(cars[<span class="number">4</span>] + <span class="string">&quot;&lt;br&gt;&quot;</span>); </span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(cars[<span class="number">5</span>] + <span class="string">&quot;&lt;br&gt;&quot;</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="样例-2"><script>cars=["BMW","Volvo","Saab","Ford"];list:{    document.write(cars[0] + "<br>");     document.write(cars[1] + "<br>");     document.write(cars[2] + "<br>");     break list;    document.write(cars[3] + "<br>");     document.write(cars[4] + "<br>");     document.write(cars[5] + "<br>"); }</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p>]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
          <category> javaScript入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2022/08/16/test/"/>
      <url>/2022/08/16/test/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/08/06/hello-world/"/>
      <url>/2022/08/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
